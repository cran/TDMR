<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=Generator content="Microsoft Word 14 (filtered)">
<style>
<!--
 /* Font Definitions */
 @font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:Wingdings;
	panose-1:5 0 0 0 0 0 0 0 0 0;}
@font-face
	{font-family:Cambria;
	panose-1:2 4 5 3 5 4 6 3 2 4;}
@font-face
	{font-family:Calibri;
	panose-1:2 15 5 2 2 2 4 3 2 4;}
@font-face
	{font-family:Tahoma;
	panose-1:2 11 6 4 3 5 4 4 2 4;}
@font-face
	{font-family:"Arial Narrow";
	panose-1:2 11 6 6 2 2 2 3 2 4;}
 /* Style Definitions */
 p.MsoNormal, li.MsoNormal, div.MsoNormal
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
h1
	{mso-style-link:"Überschrift 1 Zchn";
	margin-top:24.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	page-break-before:always;
	page-break-after:avoid;
	font-size:18.0pt;
	font-family:"Cambria","serif";
	color:#365F91;
	text-decoration:underline;}
h2
	{mso-style-link:"Überschrift 2 Zchn";
	margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	page-break-after:avoid;
	font-size:13.0pt;
	font-family:"Cambria","serif";
	color:#4F81BD;}
h3
	{mso-style-link:"Überschrift 3 Zchn";
	margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	page-break-after:avoid;
	font-size:11.0pt;
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-style:italic;}
h4
	{mso-style-link:"Überschrift 4 Zchn";
	margin-top:10.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	page-break-after:avoid;
	font-size:11.0pt;
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-style:italic;}
p.MsoToc1, li.MsoToc1, div.MsoToc1
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:0cm;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoToc2, li.MsoToc2, div.MsoToc2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:11.0pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoToc3, li.MsoToc3, div.MsoToc3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:5.0pt;
	margin-left:22.0pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoFootnoteText, li.MsoFootnoteText, div.MsoFootnoteText
	{mso-style-link:"Fußnotentext Zchn";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoHeader, li.MsoHeader, div.MsoHeader
	{mso-style-link:"Kopfzeile Zchn";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoFooter, li.MsoFooter, div.MsoFooter
	{mso-style-link:"Fußzeile Zchn";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoCaption, li.MsoCaption, div.MsoCaption
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:10.0pt;
	margin-left:0cm;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";
	color:#4F81BD;
	font-weight:bold;}
span.MsoFootnoteReference
	{vertical-align:super;}
p.MsoList, li.MsoList, div.MsoList
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:14.15pt;
	text-indent:-14.15pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListCxSpFirst, li.MsoListCxSpFirst, div.MsoListCxSpFirst
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:14.15pt;
	margin-bottom:.0001pt;
	text-indent:-14.15pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListCxSpMiddle, li.MsoListCxSpMiddle, div.MsoListCxSpMiddle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:14.15pt;
	margin-bottom:.0001pt;
	text-indent:-14.15pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListCxSpLast, li.MsoListCxSpLast, div.MsoListCxSpLast
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:14.15pt;
	text-indent:-14.15pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoList2, li.MsoList2, div.MsoList2
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:28.3pt;
	text-indent:-14.15pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoList2CxSpFirst, li.MsoList2CxSpFirst, div.MsoList2CxSpFirst
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:28.3pt;
	margin-bottom:.0001pt;
	text-indent:-14.15pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoList2CxSpMiddle, li.MsoList2CxSpMiddle, div.MsoList2CxSpMiddle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:28.3pt;
	margin-bottom:.0001pt;
	text-indent:-14.15pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoList2CxSpLast, li.MsoList2CxSpLast, div.MsoList2CxSpLast
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:28.3pt;
	text-indent:-14.15pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoList3, li.MsoList3, div.MsoList3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:42.45pt;
	text-indent:-14.15pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoList3CxSpFirst, li.MsoList3CxSpFirst, div.MsoList3CxSpFirst
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:42.45pt;
	margin-bottom:.0001pt;
	text-indent:-14.15pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoList3CxSpMiddle, li.MsoList3CxSpMiddle, div.MsoList3CxSpMiddle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:42.45pt;
	margin-bottom:.0001pt;
	text-indent:-14.15pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoList3CxSpLast, li.MsoList3CxSpLast, div.MsoList3CxSpLast
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:42.45pt;
	text-indent:-14.15pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListBullet3, li.MsoListBullet3, div.MsoListBullet3
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:46.3pt;
	text-indent:-18.0pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListBullet3CxSpFirst, li.MsoListBullet3CxSpFirst, div.MsoListBullet3CxSpFirst
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:46.3pt;
	margin-bottom:.0001pt;
	text-indent:-18.0pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListBullet3CxSpMiddle, li.MsoListBullet3CxSpMiddle, div.MsoListBullet3CxSpMiddle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:46.3pt;
	margin-bottom:.0001pt;
	text-indent:-18.0pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListBullet3CxSpLast, li.MsoListBullet3CxSpLast, div.MsoListBullet3CxSpLast
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:46.3pt;
	text-indent:-18.0pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoTitle, li.MsoTitle, div.MsoTitle
	{mso-style-link:"Titel Zchn";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:15.0pt;
	margin-left:0cm;
	border:none;
	padding:0cm;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
p.MsoTitleCxSpFirst, li.MsoTitleCxSpFirst, div.MsoTitleCxSpFirst
	{mso-style-link:"Titel Zchn";
	margin:0cm;
	margin-bottom:.0001pt;
	border:none;
	padding:0cm;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
p.MsoTitleCxSpMiddle, li.MsoTitleCxSpMiddle, div.MsoTitleCxSpMiddle
	{mso-style-link:"Titel Zchn";
	margin:0cm;
	margin-bottom:.0001pt;
	border:none;
	padding:0cm;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
p.MsoTitleCxSpLast, li.MsoTitleCxSpLast, div.MsoTitleCxSpLast
	{mso-style-link:"Titel Zchn";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:15.0pt;
	margin-left:0cm;
	border:none;
	padding:0cm;
	font-size:26.0pt;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
p.MsoBodyText, li.MsoBodyText, div.MsoBodyText
	{mso-style-link:"Textkörper Zchn";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:0cm;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoBodyTextIndent, li.MsoBodyTextIndent, div.MsoBodyTextIndent
	{mso-style-link:"Textkörper-Zeileneinzug Zchn";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:6.0pt;
	margin-left:14.15pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoSubtitle, li.MsoSubtitle, div.MsoSubtitle
	{mso-style-link:"Untertitel Zchn";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	font-size:12.0pt;
	font-family:"Cambria","serif";
	color:#4F81BD;
	letter-spacing:.75pt;
	font-style:italic;}
p.MsoBodyTextFirstIndent, li.MsoBodyTextFirstIndent, div.MsoBodyTextFirstIndent
	{mso-style-link:"Textkörper-Erstzeileneinzug Zchn";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:0cm;
	text-indent:18.0pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoBodyTextFirstIndent2, li.MsoBodyTextFirstIndent2, div.MsoBodyTextFirstIndent2
	{mso-style-link:"Textkörper-Erstzeileneinzug 2 Zchn";
	margin-top:0cm;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:18.0pt;
	text-indent:18.0pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
a:link, span.MsoHyperlink
	{color:blue;
	text-decoration:underline;}
a:visited, span.MsoHyperlinkFollowed
	{color:purple;
	text-decoration:underline;}
pre
	{mso-style-link:"HTML Vorformatiert Zchn";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:10.0pt;
	font-family:"Courier New";
	color:black;}
p.MsoAcetate, li.MsoAcetate, div.MsoAcetate
	{mso-style-link:"Sprechblasentext Zchn";
	margin:0cm;
	margin-bottom:.0001pt;
	font-size:8.0pt;
	font-family:"Tahoma","sans-serif";}
p.MsoNoSpacing, li.MsoNoSpacing, div.MsoNoSpacing
	{margin:0cm;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraph, li.MsoListParagraph, div.MsoListParagraph
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:36.0pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpFirst, li.MsoListParagraphCxSpFirst, div.MsoListParagraphCxSpFirst
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpMiddle, li.MsoListParagraphCxSpMiddle, div.MsoListParagraphCxSpMiddle
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:36.0pt;
	margin-bottom:.0001pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoListParagraphCxSpLast, li.MsoListParagraphCxSpLast, div.MsoListParagraphCxSpLast
	{margin-top:0cm;
	margin-right:0cm;
	margin-bottom:3.0pt;
	margin-left:36.0pt;
	font-size:11.0pt;
	font-family:"Calibri","sans-serif";}
p.MsoTocHeading, li.MsoTocHeading, div.MsoTocHeading
	{margin-top:24.0pt;
	margin-right:0cm;
	margin-bottom:0cm;
	margin-left:0cm;
	margin-bottom:.0001pt;
	line-height:115%;
	page-break-before:always;
	page-break-after:avoid;
	font-size:14.0pt;
	font-family:"Cambria","serif";
	color:#365F91;
	font-weight:bold;}
span.berschrift2Zchn
	{mso-style-name:"Überschrift 2 Zchn";
	mso-style-link:"Überschrift 2";
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-weight:bold;}
span.berschrift3Zchn
	{mso-style-name:"Überschrift 3 Zchn";
	mso-style-link:"Überschrift 3";
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-weight:bold;
	font-style:italic;}
span.berschrift4Zchn
	{mso-style-name:"Überschrift 4 Zchn";
	mso-style-link:"Überschrift 4";
	font-family:"Cambria","serif";
	color:#4F81BD;
	font-weight:bold;
	font-style:italic;}
span.SprechblasentextZchn
	{mso-style-name:"Sprechblasentext Zchn";
	mso-style-link:Sprechblasentext;
	font-family:"Tahoma","sans-serif";}
span.berschrift1Zchn
	{mso-style-name:"Überschrift 1 Zchn";
	mso-style-link:"Überschrift 1";
	font-family:"Cambria","serif";
	color:#365F91;
	font-weight:bold;
	text-decoration:underline;}
span.citation
	{mso-style-name:citation;}
span.printonly
	{mso-style-name:printonly;}
span.reference-accessdate
	{mso-style-name:reference-accessdate;}
span.KopfzeileZchn
	{mso-style-name:"Kopfzeile Zchn";
	mso-style-link:Kopfzeile;}
span.FuzeileZchn
	{mso-style-name:"Fußzeile Zchn";
	mso-style-link:Fußzeile;}
span.FunotentextZchn
	{mso-style-name:"Fußnotentext Zchn";
	mso-style-link:Fußnotentext;}
span.TitelZchn
	{mso-style-name:"Titel Zchn";
	mso-style-link:Titel;
	font-family:"Cambria","serif";
	color:#17365D;
	letter-spacing:.25pt;}
span.TextkrperZchn
	{mso-style-name:"Textkörper Zchn";
	mso-style-link:Textkörper;}
span.Textkrper-ZeileneinzugZchn
	{mso-style-name:"Textkörper-Zeileneinzug Zchn";
	mso-style-link:Textkörper-Zeileneinzug;}
span.UntertitelZchn
	{mso-style-name:"Untertitel Zchn";
	mso-style-link:Untertitel;
	font-family:"Cambria","serif";
	color:#4F81BD;
	letter-spacing:.75pt;
	font-style:italic;}
span.Textkrper-ErstzeileneinzugZchn
	{mso-style-name:"Textkörper-Erstzeileneinzug Zchn";
	mso-style-link:Textkörper-Erstzeileneinzug;}
span.Textkrper-Erstzeileneinzug2Zchn
	{mso-style-name:"Textkörper-Erstzeileneinzug 2 Zchn";
	mso-style-link:"Textkörper-Erstzeileneinzug 2";}
span.HTMLVorformatiertZchn
	{mso-style-name:"HTML Vorformatiert Zchn";
	mso-style-link:"HTML Vorformatiert";
	font-family:"Courier New";
	color:black;}
.MsoChpDefault
	{font-family:"Calibri","sans-serif";}
.MsoPapDefault
	{margin-bottom:10.0pt;
	line-height:115%;}
 /* Page Definitions */
 @page WordSection1
	{size:595.3pt 841.9pt;
	margin:70.85pt 70.85pt 2.0cm 70.85pt;}
div.WordSection1
	{page:WordSection1;}
 /* List Definitions */
 ol
	{margin-bottom:0cm;}
ul
	{margin-bottom:0cm;}
-->
</style>

</head>

<body lang=DE link=blue vlink=purple>

<div class=WordSection1>

<h1 align=center style='text-align:center'><a name="_Toc319565591"></a><a
name="_Toc315339095"><u><span lang=EN-US>The TDMR Package: <br>
Tuned Data Mining in R</span></u></a></h1>

<p class=MsoNormal align=center style='margin-top:18.0pt;text-align:center'><b><span
lang=EN-US style='font-size:14.0pt;font-family:"Cambria","serif";color:#365F91'><br>
Wolfgang Konen, Patrick Koch</span></b></p>

<p class=MsoNormal align=center style='margin-top:18.0pt;text-align:center'><b><span
lang=EN-US style='font-size:12.0pt;font-family:"Cambria","serif";color:#365F91'>Cologne
University of Applied Sciences</span></b></p>

<p class=MsoNormal align=center style='margin-top:18.0pt;text-align:center'><b><span
lang=EN-US style='font-size:12.0pt;font-family:"Cambria","serif";color:#365F91'>Last
update: March 2012</span></b></p>

<p class=MsoTocHeading>Contents</p>

<p class=MsoToc1><span class=MsoHyperlink><a href="#_Toc319565591"><span
lang=EN-US>The TDMR Package:  Tuned Data Mining in R</span><span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>1</span></a></span></p>

<p class=MsoToc1><span class=MsoHyperlink><a href="#_Toc319565592"><span
lang=EN-US>Using TDMR</span><span style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565593"><span
lang=EN-US>Overview</span><span style='color:windowtext;display:none;
text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565594"><span
lang=EN-US>TDMR Workflow</span><span style='color:windowtext;display:none;
text-decoration:none'>.. </span><span
style='color:windowtext;display:none;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565595"><span
lang=EN-US>Phase 1: DM without Tuning</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565596"><span
lang=EN-US>Phase 2: Tuned Data Mining in R (TDMR)</span><span style='color:
windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>3</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565597"><span
lang=EN-US>Phase 3: The Big Loop: Several TDMs with Unbiased Evaluations</span><span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565598"><span
lang=EN-US>TDMR Experiment Concept</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>4</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565599"><span
lang=EN-US>TDMR Data Reading and Data Split in Train / Validation / Test Data</span><span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>6</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565600"><span
lang=EN-US>Data Reading</span><span style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>6</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565601"><span
lang=EN-US>Training / Validation / Test  Set</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>7</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565602"><span
lang=EN-US>Examples</span><span style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>8</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565603"><span
lang=EN-US>TDMR Important Variables</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>8</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565604"><span
lang=EN-US>TDMR </span><span lang=EN-US style='font-family:"Courier New"'>opts</span><span
lang=EN-US> Concept</span><span style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>10</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565605"><span
lang=EN-US>TDMR </span><span lang=EN-US style='font-family:"Courier New"'>RGain</span><span
lang=EN-US> Concept</span><span style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>10</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565606"><span
lang=EN-US>Example Usage</span><span style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>11</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565607"><span
lang=EN-US>Phase 1: DM on task SONAR</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>11</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565608"><span
lang=EN-US>Phase 2: SPOT tuning on task SONAR</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>13</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565609"><span
lang=EN-US>Phase 3: The Big Loop on task SONAR</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>15</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565610"><span
lang=EN-US>TDMR parallel computing concept</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>17</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565611"><span
lang=EN-US>How to use parallel computing</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>17</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565612"><span
lang=EN-US>Environment envT</span><span style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>17</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565613"><span
lang=EN-US>Details</span><span style='color:windowtext;display:none;text-decoration:
none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>18</span></a></span></p>

<p class=MsoToc1><span class=MsoHyperlink><a href="#_Toc319565614"><span
lang=EN-US>Extending TDMR</span><span style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>20</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565615"><span
lang=EN-US>TDMR Tuner Concept</span><span style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>20</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565616"><span
lang=EN-US>How to use different tuners</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>20</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565617"><span
lang=EN-US>How to integrate new tuners</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>20</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565618"><span
lang=EN-US>TDMR Design Mappping Concept</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>20</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565619"><span
lang=EN-US>How to add a new tuning variable</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>21</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565620"><span
lang=EN-US>Details</span><span style='color:windowtext;display:none;text-decoration:
none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>21</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565621"><span
lang=EN-US>TDMR </span><span lang=EN-US style='font-family:"Courier New"'>seed</span><span
lang=EN-US> Concept</span><span style='color:windowtext;display:none;
text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>21</span></a></span></p>

<p class=MsoToc3><span class=MsoHyperlink><a href="#_Toc319565622"><span
lang=EN-US>Details</span><span style='color:windowtext;display:none;text-decoration:
none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>23</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565623"><span
lang=EN-US>TDMR Graphic Device Concept</span><span style='color:windowtext;
display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>23</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565624"><span
lang=EN-US>Summary</span><span style='color:windowtext;display:none;text-decoration:
none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>24</span></a></span></p>

<p class=MsoToc2><span class=MsoHyperlink><a href="#_Toc319565625">References<span
style='color:windowtext;display:none;text-decoration:none'>. </span><span
style='color:windowtext;display:none;text-decoration:none'>24</span></a></span></p>

<p class=MsoNormal>&nbsp;</p>

<h1><a name="_Toc319565592"><u><span lang=EN-US>Using TDMR</span></u></a></h1>

<h2><a name="_Toc319565593"><span lang=EN-US>Overview</span></a></h2>

<p class=MsoNormal><span lang=EN-US>The TDMR framework is written in R with the
aim to facilitate the training, tuning and evaluation of data mining models. It
puts special emphasis on tuning these data mining models as well as
simultaneously tuning certain preprocessing options. TDMR is especially
designed to work with SPOT [Bart10e] as the preferred tuner, but it offers also
the possibility to use other tuners, e.g., CMA-ES [Hans06], LHD <span
class=citation>[McKay79]</span> or direct-search optimizers [BFGS, Powell] for
comparision.</span></p>

<p class=MsoNormal><span lang=EN-US>This document </span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>gives a short overview over the TDMR framework, </span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>explains some of the underlying concepts and </span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>shows an example usage: how to use TDMR on a new
data mining task.  </span></p>

<p class=MsoNormal><span lang=EN-US>This document concentrates more on the
software usage aspects of the TDMR framework. For a more scientific discussion
of the underlying concepts and the results obtained, the reader is referred to
[Kone10a, Kone11b].</span></p>

<h2><a name="_Toc319565594"><span lang=EN-US>TDMR Workflow</span></a></h2>

<h3><a name="_Toc319565595"><span lang=EN-US>Phase 1: DM without Tuning</span></a></h3>

<p class=MsoNormal><span lang=EN-US>Two kinds of DM tasks, classification or
regression, can be handled. </span></p>

<p class=MsoNormal><span lang=EN-US>For each DM task TASK, create one task-specific
function main_TASK(</span><a href="#opts"><span lang=EN-US>opts</span></a><span
lang=EN-US>=NULL), as short as possible. If called without any parameter, main_TASK()
should set default parameters for </span><a href="#opts"><span lang=EN-US>opts</span></a><span
lang=EN-US> via tdmOptsDefaultsSet(). main_TASK() reads in the task data, does the
preprocessing if necessary and then calls with the preprocessed data </span><a
href="#dset"><span lang=EN-US>dset</span></a><span lang=EN-US> the
task-independent functions tdmClassifyLoop or tdmRegressLoop, which in turn
call the task-independent functions tdmClassify or tdmRegress. </span></p>

<p class=MsoNormal><span lang=EN-US>A template may be copied from </span><a
href="#inst"><span lang=EN-US>inst</span></a><span lang=EN-US>/demo02sonar/main_sonar.r.
[Here and in the following in<a name=inst></a>st/ refers to the directory where
the package TDMR is installed. Use </span><span lang=EN-US style='font-size:
10.0pt;font-family:"Courier New"'>.find.package(TDMR) </span><span
lang=EN-US> to locate this directory.] The template is invoked with<br>
<br>
</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0
 style='margin-left:5.4pt;background:#F2F2F2;border-collapse:collapse;
 border:none'>
 <tr>
  <td width=607 valign=top style='width:455.2pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'> 
  result &lt;- main_sonar();</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><a href="#_Phase_1:_DM"><i><span lang=EN-US>See Sec.
Example Usage (Phase 1) for a complete example</span></i></a><span
lang=EN-US>.</span></p>

<p class=MsoNormal><a href="#details_result"><i><span lang=EN-US>See Table 3
for an overview of elements in list</span></i><span lang=EN-US> </span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>result</span></a><span
lang=EN-US>. </span></p>

<h3><a name="_Toc319565596"></a><a name="_Phase_2:_Tuned"></a><span lang=EN-US>Phase
2: Tuned Data Mining in R (TDMR)</span></h3>

<p class=MsoNormal><span lang=EN-US>A TDMR task consists of a DM task (Phase 1)
plus a tuner configuration (decision which parameters to tune within which ROI,
which meta parameters to set for the tuner, ). </span></p>

<p class=MsoNormal><span lang=EN-US>It is recommended to create for each DM
task TASK a separate subdir. In this subdir the files shown in </span><b><span lang=EN-US>Table 1</span></b><span lang=EN-US> have to be created for each tuner
configuration (each TDMR task). In the case of SPOT as a tuner, this may look
like: </span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoCaption style='page-break-after:avoid'><a name="_Ref284365167"><span
lang=EN-US>Table </span></a><span lang=EN-US>1</span><span lang=EN-US>:
Configuration files for a SPOT run</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr style='height:13.8pt'>
  <td width=64 valign=top style='width:47.95pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:13.8pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US>.apd       </span></p>
  </td>
  <td width=550 valign=top style='width:412.65pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt;height:13.8pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US>problem
  design: all </span><a href="#opts"><span lang=EN-US>opts</span></a><span
  lang=EN-US>-settings </span></p>
  </td>
 </tr>
 <tr style='height:13.75pt'>
  <td width=64 valign=top style='width:47.95pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US>.roi</span></p>
  </td>
  <td width=550 valign=top style='width:412.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US>SPOT ROI file,
  specifies which parameters to tune in which ROI</span></p>
  </td>
 </tr>
 <tr style='height:13.75pt'>
  <td width=64 valign=top style='width:47.95pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US>.conf</span></p>
  </td>
  <td width=550 valign=top style='width:412.65pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US>SPOT
  configuration file, usually with alg.func = &quot;tdmStartSpot&quot;.
  Furthermore,  io.apdFileName and io.roiFileName should specify the two files
  above.</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>Templates for these three files may be
copied from </span><a href="#inst"><span lang=EN-US>inst</span></a><span
lang=EN-US>/demo02sonar/sonar_01.*. </span></p>

<p class=MsoNormal><span lang=EN-US>The whole SPOT tuning can be started with a
small file  </span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>script_phase2.r</span><span
lang=EN-US>  in the user directory. A template can be found in </span><a
href="#inst"><span lang=EN-US>inst</span></a><span lang=EN-US>/demo02sonar:</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0
 style='margin-left:5.4pt;background:#F2F2F2;border-collapse:collapse;
 border:none'>
 <tr>
  <td width=607 valign=top style='width:455.2pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>  source(&quot;script_phase2.r&quot;);</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>This script will define a main_TASK in </span><a
href="#tdm"><span lang=EN-US>tdm</span></a><span lang=EN-US>$mainCommand, reads
the .apd file and calls SPOT. SPOT reads the .conf file, calls the generic
function <b>tdmStartSpot</b>(spotConfig), which finally executes </span><a
href="#tdm"><span lang=EN-US>tdm</span></a><span lang=EN-US>$mainCommand. </span></p>

<p class=MsoNormal><span lang=EN-US>The only requirement on </span><a
href="#tdm"><span lang=EN-US>tdm</span></a><span lang=EN-US>$mainCommand is
that it returns in</span></p>

<p class=MsoNormal><span lang=EN-US>                result$y</span></p>

<p class=MsoNormal><span lang=EN-US>a suitable quantity to be <b>minimized</b>
by SPOT.</span></p>

<p class=MsoNormal><span lang=EN-US>If spot.fileMode==T, SPOT will generate
.des and .aroi files (needed by SPOT internally) and the output files .bst and
.res.</span></p>

<p class=MsoNormal><span lang=EN-US>If spot.fileMode==F, tdmStartSpot will read
the design from spotConfig$alg.currentDesign and it writes the .res data frame
onto spotConfig$alg.currentResult.</span></p>

<p class=MsoNormal><a href="#_Phase_2:_SPOT"><i><span lang=EN-US>See Sec.
Example Usage (Phase 2) for a complete example</span></i></a><span
lang=EN-US>.</span></p>

<h3><a name="_Toc319565597"></a><a name="_Phase_3:_The"></a><span lang=EN-US>Phase
3: The Big Loop: Several TDMs with Unbiased Evaluations</span></h3>

<p class=MsoNormal><span lang=EN-US>The Big Loop is a script to start several
Phase-2-TDMR tasks (usually on the same DM task), optionally with several
tuners (</span><a href="#_TDMR_Tuner_Concept"><i><span lang=EN-US>see here for
a list of tuners</span></i></a><span lang=EN-US>) and compare their best
solutions with different modes of unbiased evaluations, e.g. on unseen test
data (</span><a href="#tdm"><span lang=EN-US>tdm</span></a><span lang=EN-US>$umode
= TST) or by starting a new, independent CV (</span><a href="#tdm"><span
lang=EN-US>tdm</span></a><span lang=EN-US>$umode = CV) or by starting a new,
independent resubsampling (</span><a href="#tdm"><span lang=EN-US>tdm</span></a><span
lang=EN-US>$umode = RSUB). </span></p>

<p class=MsoNormal><span lang=EN-US>To start the Big Loop, only one file has to
be created in the user directory: script_all.R. A template may be copied from </span><a
href="#inst"><span lang=EN-US>inst</span></a><span lang=EN-US>/demo02sonar/script_all.R.
</span></p>

<p class=MsoNormal><span lang=EN-US>It is invoked with</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0
 style='margin-left:5.4pt;background:#F2F2F2;border-collapse:collapse;
 border:none'>
 <tr>
  <td width=607 valign=top style='width:455.2pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'> 
  source(&quot;script_all.R&quot;)</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>This will specify in </span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>runList</span><span
lang=EN-US> the list of TDMR tasks and a list of tuners. For each TDMR task and
each tuner </span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US>(a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>the tuning process is started (if spotStep=auto) or a previous
tuning result is read in from file (if spotStep=rep) and </span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US>(b)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
lang=EN-US>one or more unbiased evaluations are started. This is to see whether
the result quality is reproducible on independently trained models and / or on
independent test data.</span></p>

<p class=MsoNormal><span lang=EN-US>The result is a data frame </span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>theFinals</span><span
lang=EN-US> with one row for each TDMR task / each tuner and several columns
measuring the success of the best tuning solution in different unbiased
evaluations, see </span><b><span
lang=EN-US>Table 2</span></b><b><span lang=EN-US>.</span></b><span lang=EN-US>
The data frame </span><span lang=EN-US style='font-size:10.0pt;font-family:
"Courier New"'>theFinals</span><span lang=EN-US> is written to </span><a
href="#tdm"><span lang=EN-US>tdm</span></a><span lang=EN-US>$finalFile.</span></p>

<p class=MsoNormal><a
href="../../../../../../../../../../../Dokumente%20und%20Einstellungen/wolfgang/Anwendungsdaten/Microsoft/Word/The_2#_Phase_3:_"><i><span
lang=EN-US>See Sec. Example Usage (Phase 3) for a complete example</span></i></a><span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc319565598"><span lang=EN-US>TDMR Experiment Concept</span></a></h2>

<p class=MsoNormal><a
href="../../../../../../../../../../../Dokumente%20und%20Einstellungen/wolfgang/Anwendungsdaten/Microsoft/Word/TDM-docu.docx#Phase 3: "><span
lang=EN-US>TDMR Phase 3</span></a><span lang=EN-US> (The Big Loop) allows </span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US>(a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>to conduct experiments, where different .conf files, different
tuners, different unbiased evaluations,  are tried on the same task;</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US>(b)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp; </span></span><span
lang=EN-US>to repeat certain experiments of kind (a) multiple times with
different seeds (</span><a href="#tdm"><span lang=EN-US>tdm</span></a><span
lang=EN-US>$nExperim&gt;1). </span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>The concept behind the experiments is as
follows: </span></p>

<p class=MsoNormal><u><span lang=EN-US>Model building:</span></u></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>During model building (training) and tuning the
user starts with a data set, which is partitioned into </span><a
href="#_Training_/_Validation"><span lang=EN-US>training and validation set</span></a><span
lang=EN-US>. </span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>The </span><a href="#_TDMR_RGain_Concept"><span
lang=EN-US>relative gain</span></a><span lang=EN-US> achieved on the validation
set acts as <i>performance measure</i> for the tuning process. </span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>In the case of cv or in the case
opts$NRUN&gt;1 multiple models are build, each with its own training and
validation set. In this case multiple relative gains are averaged to get the
performance measure for the tuning process. </span></p>

<p class=MsoNormal><u><span lang=EN-US>Tuning:</span></u></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>The above model building process is started
several times with different model and preprocessing parameters (design points). 
The tuning process uses the <i>performance measure</i> returned to guide the
search for better parameters.</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>As a result of the tuning process, a best
parameter set emerges. It has a certain performance measure attached to it, but
this measure might be too optimistic (e.g. due to averaging over different runs
or different folds or due to extensive searching for good solutions in a noisy environment)</span></p>

<p class=MsoNormal><u><span lang=EN-US>Unbiased Evaluation (Test):</span></u></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Once a best parameter set is established, an
unbiased performance test is recommended.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>This evaluation is done by calling unbiasedRun()
with one or several values for parameter </span><span lang=EN-US
style='font-family:"Courier New"'>umode</span><span lang=EN-US>. The values are
in </span><span lang=EN-US style='font-family:"Courier New"'>tdm$umode</span><span
lang=EN-US> (a vector). The possible choices for </span><span lang=EN-US
style='font-family:"Courier New"'>umode</span><span lang=EN-US> are:</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:72.0pt;text-indent:-18.0pt'><span
lang=EN-US style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Courier New"'>umode=RSUB</span><span
lang=EN-US>: Run the model building anew, using the same data set as in the
tuning process, but with another random subsample having</span><span
lang=EN-US style='font-family:"Courier New"'> tdm$tstFrac</span><span
lang=EN-US> (usually 20%) test data, the rest for training.<a href="#_ftn1"
name="_ftnref1" title=""><span class=MsoFootnoteReference><span
class=MsoFootnoteReference><span lang=EN-US style='font-size:11.0pt;font-family:
"Calibri","sans-serif"'>[1]</span></span></span></a> </span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:72.0pt;text-indent:-18.0pt'><span
lang=EN-US style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Courier New"'>umode=CV</span><span
lang=EN-US>: Run the model building again with the same data set as in the
tuning process, but using cross validation with </span><span lang=EN-US
style='font-family:"Courier New"'>tdm$nfold </span><span lang=EN-US>(usually
10) folds and report the CV-</span><a href="#_TDMR_RGain_Concept"><span
lang=EN-US>relative gain</span></a></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:72.0pt;text-indent:-18.0pt'><span
lang=EN-US style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Courier New"'>umode=TST</span><span
lang=EN-US>: This is the recommended way, if you have independent test data set
aside, which were not used during the whole tuning process. All the data of the
tuning process (usually read from </span><span lang=EN-US style='font-family:
"Courier New"'>opts$filename</span><span lang=EN-US>) are now used for
training. The test data are read from </span><span lang=EN-US style='font-family:
"Courier New"'>opts$filetest</span><span lang=EN-US>, the trained model is
applied to them and the performance (</span><a href="#_TDMR_RGain_Concept"><span
lang=EN-US>relative gain</span></a><span lang=EN-US>) on these test data with a
fresh model is an unbiased estimator of  the models performance on new data.</span></p>

<p class=MsoListParagraphCxSpMiddle style='margin-left:72.0pt;text-indent:-18.0pt'><span
lang=EN-US style='font-family:"Courier New"'>o<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-family:"Courier New"'>umode=SP_T</span><span
lang=EN-US>: Similar to </span><span lang=EN-US style='font-family:"Courier New"'>umode=TST</span><span
lang=EN-US>, but the split is done in a random fashion by TDMR.</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>If </span><span lang=EN-US style='font-family:
"Courier New"'>tdm$nrun&gt;1</span><span lang=EN-US>, each of the above values
in </span><span lang=EN-US style='font-family:"Courier New"'>tdm$umode</span><span
lang=EN-US> is repeated  in multiple runs and the performance measure returned
is the average over all runs.</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>&nbsp;</span></p>

<p class=MsoCaption style='page-break-after:avoid'><a name="_Ref305828329"><span
lang=EN-US>Table </span></a><span lang=EN-US>2</span><span lang=EN-US>: Elements
of data frame </span><span lang=EN-US style='font-family:"Courier New"'>finals</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0 width=621
 style='width:466.1pt;border-collapse:collapse;border:none'>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  background:#FFFFCC;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><b><span lang=EN-US>fin<a name=finals></a>als$</span></b></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border:solid windowtext 1.0pt;
  border-left:none;background:#FFFFCC;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><b><span lang=EN-US>Description</span></b></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border:solid windowtext 1.0pt;
  border-left:none;background:#FFFFCC;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><b><span lang=EN-US>Condition</span></b></p>
  </td>
 </tr>
 <tr>
  <td width=621 colspan=3 valign=top style='width:466.1pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><i><span lang=EN-US style='font-size:10.0pt'>        <br>
        &lt;&lt;columns obtained from the tuning process&gt;&gt;</span></i></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>CONF</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>the base name of
  the .conf file</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>&nbsp;</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>TUNER</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>the value of
  tdm$tuneMethod</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>&nbsp;</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>{PARAMS}</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>all tuned
  parameters appearing in .roi file</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>if
  tdm$withParams==T</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>NEVAL</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>tuning budget,
  i.e. # of model evaluations during tuning (rows in data frame res)</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>&nbsp;</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>RGain.bst</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>best solution (</span><a
  href="#_TDM_RGain_Concept"><span lang=EN-US style='font-size:10.0pt'>RGain</span></a><span
  lang=EN-US style='font-size:10.0pt'>) obtained from tuning</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>&nbsp;</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>RGain.avg</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>average RGain during
  tuning (mean of res$Y)</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>&nbsp;</span></p>
  </td>
 </tr>
 <tr>
  <td width=621 colspan=3 valign=top style='width:466.1pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><i><span lang=EN-US style='font-size:10.0pt'>      <br>
         &lt;&lt;columns obtained from the unbiased runs&gt;&gt;</span></i></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>NRUN</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'># of runs with
  different test &amp; train samples in unbiasedBestRun_*.r or # of unbiased
  CV-runs. Usually NRUN = tdm$nrun, see fct map.opts in tdmMapDesign.r.</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>&nbsp;</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>RGain.OOB</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>mean OOB
  training error (averaged over all unbiased runs)</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>if opts$method =
  *.RF</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>sdR.OOB</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>std. dev. of
  RGain.OOB</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>if opts$method =
  *.RF</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>RGain.TRN</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>mean training
  error (averaged over all unbiased runs)</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>if opts$method </span><span
  lang=EN-US style='font-size:10.0pt;font-family:Symbol'>¹</span><span
  lang=EN-US style='font-size:10.0pt'> *.RF</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>sdR.TRN</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>std. dev. of
  RGain.TRN</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>if opts$method </span><span
  lang=EN-US style='font-size:10.0pt;font-family:Symbol'>¹</span><span
  lang=EN-US style='font-size:10.0pt'> *.RF</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>RGain.RSUB</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>mean test RGain
  (test set = random subsample)</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>if tdm$umode has
  RSUB</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>sdR.RSUB</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>std. dev. of
  RGain.RSUB (averaged over all unbiased runs)</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>if tdm$umode has
  RSUB</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>RGain.TST</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>mean test RGain
  (test set = separate data, user-provided)</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>if tdm$umode has
  TST</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>sdR.TST</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>std. dev. of
  RGain.TST (averaged over all unbiased runs)</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>if tdm$umode has
  TST</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>RGain.CV</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>mean test RGain
  (test set = CV, cross validation with tdm$nfold CV-folds</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>if tdm$umode has
  CV</span></p>
  </td>
 </tr>
 <tr>
  <td width=102 valign=top style='width:76.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>sdR.CV</span></p>
  </td>
  <td width=359 valign=top style='width:269.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>std. dev. of
  RGain.CV (averaged over all unbiased runs)</span></p>
  </td>
  <td width=161 valign=top style='width:120.5pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>if tdm$umode has
  CV</span></p>
  </td>
 </tr>
</table>

<p class=MsoListParagraph><span lang=EN-US style='font-size:10.0pt'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>More details:</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>Each experiment of kind
(a) initially deletes file tdm$finalFile, if it exists, and then writes for
each combination {.conf file, tuner} it encounters a line to tdm$finalFile
(usually a file with suffix .fin). This line is a one-row data frame </span><span
lang=EN-US style='font-size:9.0pt;font-family:"Courier New"'>finals</span><span
lang=EN-US style='font-size:9.0pt'> </span><span lang=EN-US style='font-size:
10.0pt'>which is built in unbiasedBestRun_C.r (classification) and contains the
columns listed in </span><b><span
lang=EN-US>Table</span></b><span lang=EN-US> <b>2</b></span><span lang=EN-US
style='font-size:10.0pt'>.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>In the case of
regression experiments (unbiasedBestRun_R.r) each RGain has to be replaced by
RMAE in the table above, see </span><a href="#_TDM_RGain_Concept"><span
lang=EN-US style='font-size:10.0pt'>here</span></a><span lang=EN-US
style='font-size:10.0pt'> for further explanation.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>If </span><a href="#tdm"><span
lang=EN-US style='font-size:10.0pt'>tdm</span></a><span lang=EN-US
style='font-size:10.0pt'>$experFile is not NULL, then the same one-row data
frame</span><span lang=EN-US style='font-size:9.0pt;font-family:"Courier New"'>
finals</span><span lang=EN-US style='font-size:10.0pt'> is also appended to the
file </span><a href="#tdm"><span lang=EN-US style='font-size:10.0pt'>tdm</span></a><span
lang=EN-US style='font-size:10.0pt'>$experFile. Usually, </span><a href="#tdm"><span
lang=EN-US style='font-size:10.0pt'>tdm</span></a><span lang=EN-US
style='font-size:10.0pt'>$experFile is a file with </span><span lang=EN-US
style='font-size:9.0pt;font-family:"Courier New"'>.exp</span><span lang=EN-US
style='font-size:10.0pt'> as suffix. This file is never deleted by the TDMR
system, only the user may delete it.  </span><a href="#tdm"><span lang=EN-US
style='font-size:10.0pt'>tdm</span></a><span lang=EN-US style='font-size:10.0pt'>$experFile
serves the purpose to accumulate experiments carried out multiple times (with
different random seeds).  This multiple-experiment execution may be done either
directly, within one big-loop experiment, if </span><a href="#tdm"><span
lang=EN-US style='font-size:10.0pt'>tdm</span></a><span lang=EN-US
style='font-size:10.0pt'>$nExperim&gt;1, or it may be done subsequently by the
user when starting script_all.R again at a later point in time with the same </span><a
href="#tdm"><span lang=EN-US style='font-size:10.0pt'>tdm</span></a><span
lang=EN-US style='font-size:10.0pt'>$experFile defined. </span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>An .exp file can be
analyzed with scripts like exp_summ.r in TDM.SPOT.d/appAcid/.</span></p>

<h2><a name="_Toc319565599"><span lang=EN-US>TDM</span></a><a
name="TDMR_train_vali_test"></a><span lang=EN-US>R Data Reading and Data Split
in Train / Validation / Test Data</span></h2>

<h3><a name="_Toc319565600"><span lang=EN-US>Data Reading</span></a></h3>

<p class=MsoNormal><span lang=EN-US>TDMR reads the task data from opts$filename
and optionally also from opts$filetest, if opts$READ.TST=TRUE.</span></p>

<p class=MsoNormal><span lang=EN-US>It is recommended to read the data prior to
tuning  with the setting opts$READ.INIT=TRUE (the default) and using
opts$READ.CMD. If opts$READ.CMD is not defined, the default is: </span></p>

<p class=MsoNormal><span lang=EN-US>                &quot;read.csv(file=paste(opts$dir.txt,
filename, sep=\&quot;\&quot;), nrow=opts$READ.NROW)&quot;<br>
which includes the defaults </span><span lang=EN-US style='font-family:"Courier New"'>header=TRUE</span><span
lang=EN-US>, </span><span lang=EN-US style='font-family:"Courier New"'>sep=&quot;,&quot;</span><span
lang=EN-US>, </span><span lang=EN-US style='font-family:"Courier New"'>dec=&quot;.&quot;</span><span
lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>Then TDMR will read the data into </span><span
lang=EN-US style='font-family:"Courier New"'>dset</span><span lang=EN-US> at
the beginning of tdmCompleteEval with</span></p>

<p class=MsoNormal><span lang=EN-US>                dset &lt;-
tdmReadData(opts);</span></p>

<p class=MsoNormal><span lang=EN-US>and let the function tdmReadData do the
read work (including the options opts$READ.CMD, opts$READ.TST, READ.TXT and
READ.NROW).  </span><span lang=EN-US style='font-family:"Courier New"'>dset</span><span
lang=EN-US>  is passed on with </span><span lang=EN-US style='font-family:"Courier New"'>main_TASK(,
dset=dset)</span><span lang=EN-US>. </span></p>

<p class=MsoNormal><span lang=EN-US>For downward compatibility and for special
cases it is also possible to set opts$READ.INIT=FALSE, then </span><span
lang=EN-US style='font-family:"Courier New"'>dset=NULL</span><span lang=EN-US>
and the data reading is done in main_TASK, for <i><u>each</u></i>  tuning step anew.  
</span></p>

<p class=MsoNormal><span lang=EN-US>TODO: add an example readZZZ function</span></p>

<h3><a name="_Toc319565601"></a><a name="_Training_/_Validation"></a><span
lang=EN-US>Training / Validation / Test  Set</span></h3>

<p class=MsoNormal><span lang=EN-US>In data mining we know three kind of data
or data sets:</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b><span lang=EN-US>Training set</span></b><span lang=EN-US>: the
data for learning or model training.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b><span lang=EN-US>Validation set</span></b><span lang=EN-US>:
the data used to obtain a performance measure of the trained model. The
performance on the validation data is used to guide the tuning process.</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US>3.<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><b><span
lang=EN-US>Test set</span></b><span lang=EN-US>: When training and tuning is
finished, we build a final model. To estimate the quality of the model for new
data, we test its performance on test data. Usually, the test data were not
seen by the model or the tuner. The user should NOT use the performance on the
test data in any way to tune the model further.</span></p>

<p class=MsoNormal><span lang=EN-US>Usually, the split into test set on the one
side and training/validation set on the other side is done <i><u>once</u></i>
prior to the tuning process. During tuning, many tuning steps are possible,
each containing at least one model training and each step may have a new
separation of the training/validation set into a training part and a validation
part.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>How can we split the data into test set and
training/validation set (which we will abbreviate with  </span><span
lang=EN-US style='font-family:"Courier New"'>TrnVaSet</span><span lang=EN-US>
in the following)?   TDMR offers three options here, where options 2 and 3
require opts$READ.INI=TRUE (the default): </span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b><span lang=EN-US>No test set splitting</span></b><span
lang=EN-US>. The whole data is used for training/validation and later also for
unbiased testing. This is NOT the recommended way since the test set is already
visible during training and tuning, but sometimes you may have only very few
data and cannot afford to set test data aside.<br>
To use this option, set </span><span lang=EN-US style='font-family:"Courier New"'>tdm$umode=RSUB
</span><span lang=EN-US>or </span><span lang=EN-US style='font-family:"Courier New"'> tdm$umode=CV</span><span
lang=EN-US>  and </span><span lang=EN-US style='font-family:"Courier New"'> opts$TST.testFrac</span><span
lang=EN-US>   to the desired random fraction to be set aside (default is 10%).</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b><span lang=EN-US>User-defined test set splitting</span></b><span
lang=EN-US>. Here we allow two sub-options: (a) The train/validation data are
in opts$filename and the test data are in opts$filetest. TDMR reads both and
adds a new column opts$TST.COL to the data frame with 0 for train/validation
data and 1 for test data. (b) The user provides one data frame containing
already a column opts$TST.COL with the appropriate 0s and 1s.</span></p>

<p class=MsoListParagraphCxSpMiddle><span lang=EN-US>To use option (a), set </span><span
lang=EN-US style='font-family:"Courier New"'>tdm$umode=TST </span><span
lang=EN-US>and </span><span lang=EN-US style='font-family:"Courier New"'> opts$READ.TST=TRUE</span><span
lang=EN-US> . Have opts$filetest and opts$TST.COL set to meaningful string
values.  <br>
To use option (b), set </span><span lang=EN-US style='font-family:"Courier New"'>tdm$umode=TST
</span><span lang=EN-US>and </span><span lang=EN-US style='font-family:"Courier New"'> opts$READ.TST=FALSE</span><span
lang=EN-US>.  The string opts$TST.COL has to name a column of the data frame
read which contains already the appropriate 0s and 1s.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b><span lang=EN-US>TDMR sets a random fraction of the data aside
for testing</span></b><span lang=EN-US>. This is done once before the tuning
starts. The test set (the data set aside for testing) is used only  in the
unbiased evaluation. The whole procedure can be repeated (if tdm$nExperim&gt;1)
and another random test set  is set aside. <br>
This is the recommended way, it has a completely independent test set and allows
to assess the variability due to varying test set selection. <br>
To use this option, set </span><span lang=EN-US style='font-family:"Courier New"'>tdm$umode=SP_T
</span><span lang=EN-US>and </span><span lang=EN-US style='font-family:"Courier New"'> opts$TST.testFrac</span><span
lang=EN-US>   to the desired random fraction to be set aside (default is 10%).
The splitting is coded in the column dset$tdmSplit with 0 for all records
belonging to </span><span lang=EN-US style='font-family:"Courier New"'>TrnVaSet</span><span
lang=EN-US> and 1 for test data.</span></p>

<p class=MsoListParagraphCxSpLast><span lang=EN-US>Set </span><span lang=EN-US
style='font-family:"Courier New"'>tdm$SPLIT.SEED=&lt;number&gt;</span><span
lang=EN-US>  if you want reproducible splits (but varying for each experiment).
</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>How can we further split </span><span
lang=EN-US style='font-family:"Courier New"'>TrnVaSet</span><span lang=EN-US>
into training set and validation set?  TDMR offers again three options here,
which are distinguished by the value of <b>opts$TST.kind</b>:</span></p>

<p class=MsoListParagraphCxSpFirst style='text-align:justify;text-indent:-18.0pt'><span
lang=EN-US>1.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b><span lang=EN-US>rand = Random Subsampling</span></b><span
lang=EN-US>:  Sample a fraction opts$TST.valiFrac from </span><span lang=EN-US
style='font-family:"Courier New"'>TrnVaSet</span><span lang=EN-US>  and set it
aside for validation. Use the rest for training, if opts$TST.trnFrac is not
defined. If opts$TST.trnFrac is defined (and if it is </span><span lang=EN-US>&#8804;</span><span
lang=EN-US> 1-opts$TST.valiFrac, otherwise error), then use only a random
fraction opts$TST.trnFrac from </span><span lang=EN-US style='font-family:"Courier New"'>TrnVaSet</span><span
lang=EN-US> for training.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:-18.0pt'><span
lang=EN-US>2.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b><span lang=EN-US>cv = Cross Validation</span></b><span
lang=EN-US>:  Split </span><span lang=EN-US style='font-family:"Courier New"'>TrnVaSet</span><span
lang=EN-US>  into opts$TST.nfold  folds and use them for cross validation.</span></p>

<p class=MsoListParagraphCxSpLast style='text-align:justify;text-indent:-18.0pt'><span
lang=EN-US>3.<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><b><span lang=EN-US>col = User-Defined Column</span></b><span
lang=EN-US>:  All records with a 0 in column opts$TST.COL are used for
training, the rest for validation.</span></p>

<p class=MsoNormal style='text-align:justify'><span lang=EN-US>The split into
training and validation data is done in tdmClassifyLoop, i.e. for each call of
main_TASK.</span></p>

<p class=MsoNormal><span lang=EN-US>col is normally not recommended (do not
use test data for tuning), but is o.k. in the special case of
opts$MOD.method=RF or MC.RF: Then we need no validation data, since we have
OOB.</span></p>

<h3 style='margin-bottom:6.0pt'><a name="_Toc319565602"><span lang=EN-US>Examples</span></a></h3>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=307 valign=top style='width:230.3pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-top:2.0pt;margin-right:0cm;margin-bottom:
  1.0pt;margin-left:0cm'><span lang=EN-US>opts$READ.INI=TRUE<br>
  opts$READ.TST=TRUE<br>
  opts$filename=&quot;dmc2010_train.txt&quot;<br>
  opts$filetest=&quot;dmc2010_test.txt&quot;<br>
  opts$TST.kind=&quot;col&quot;<br>
  opts$TST.COL=&quot;TST&quot;<br>
  opts$MOD.method=&quot;RF&quot;<br>
  tdm$umode=&quot;TST&quot;<br>
  <br>
  </span></p>
  </td>
  <td width=307 valign=top style='width:230.3pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-top:2.0pt;margin-right:0cm;margin-bottom:
  1.0pt;margin-left:0cm'><span lang=EN-US>Read the data prior to tuning, with
  train-set from dmc2010_train.txt, test set from dmc2010_test.txt. This is coded
  with 0 and 1 in column TST of the data frame dset . With
  opts$TST.kind=col we specify that all TST==0 data are used for training.
  The model RF (Random Forest) needs no validation data, since the performance
  measure is OOB on the training set.</span></p>
  </td>
 </tr>
 <tr>
  <td width=307 valign=top style='width:230.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-top:2.0pt;margin-right:0cm;margin-bottom:
  1.0pt;margin-left:0cm'><span lang=EN-US>opts$READ.INI=TRUE<br>
  opts$filename=&quot;sonar.txt&quot;<br>
  opts$TST.testFrac=0.15<br>
  opts$TST.kind=&quot;cv&quot;</span></p>
  <p class=MsoNormal style='margin-top:2.0pt;margin-right:0cm;margin-bottom:
  1.0pt;margin-left:0cm'>opts$TST.nfold=5<br>
  tdm$umode=&quot;SP_T&quot;<br>
  <br>
  </p>
  </td>
  <td width=307 valign=top style='width:230.3pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-top:2.0pt;margin-right:0cm;margin-bottom:
  1.0pt;margin-left:0cm'><span lang=EN-US>Read the data prior to tuning from
  sonar.txt, split them by random subsampling: 15% into test set and 85% into train+validation
  set. This is coded with 0 and 1 in column tdmSplit of  data frame dset
  . During tuning, the train+validation set is further split by cross
  validation with 5 folds (new split in each tuning step). The unbiased run
  uses <u>all</u> 85% train+validation data for training and reports the
  performance on the 15% test set data.</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>Details: </span></p>

<p class=MsoListParagraph style='text-indent:-18.0pt'><span lang=EN-US
style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>opts$TST.kind=rand
triggers random resampling for the division of dset into training and test set.
In the case of classification this resampling is done by <b>stratified sampling</b>:
each level of the response variable appears in the training set in proportion
to its relative frequency in dset, <u>but at least with one record</u>. This
last condition is important to ensure proper functioning also in the case of
rare levels (most DM models will crash if a certain level does never appear
in the training set). In the case of regression the sample is drawn randomly
(without stratification).</span></p>

<h2><a name="_Toc319565603"><span lang=EN-US>TDMR Important Variables</span></a></h2>

<p class=MsoCaption><span lang=EN-US><br>
<a name="_Ref306222098">Table </a></span><span lang=EN-US>3</span><span
lang=EN-US>: Overview of important variables in TDMR</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr style='height:13.8pt'>
  <td width=70 valign=top style='width:52.85pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:13.8pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US
  style='font-size:10.0pt;font-family:"Courier New"'>o<a name=opts></a>pts</span><span
  lang=EN-US>     </span></p>
  </td>
  <td width=549 valign=top style='width:411.55pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt;height:13.8pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US>list with DM
  settings (used by main_TASK and its subfunctions). Parameter groups:</span></p>
  <p class=MsoListParagraphCxSpFirst style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts$READ.*</span><span
  lang=EN-US style='font-size:10.0pt'>  </span><span lang=EN-US>#  reading the
  data</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts$TST.*</span><span
  lang=EN-US style='font-size:10.0pt'>    </span><span lang=EN-US>#  training /
  validation / test set and resampling</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts$PRE.*</span><span
  lang=EN-US style='font-size:10.0pt'>    </span><span lang=EN-US># 
  preprocessing</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts$SRF.*</span><span
  lang=EN-US style='font-size:10.0pt'>    </span><span lang=EN-US>#  sorted
  random forest (or similar other variable rankings)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts$MOD.*</span><span
  lang=EN-US>    #  genera model issues</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts$CLS.*</span><span
  lang=EN-US>    #  classification issues</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts$RF.*</span><span
  lang=EN-US style='font-size:10.0pt'>       </span><span lang=EN-US>#  Random
  Forest</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts$SVM.*</span><span
  lang=EN-US style='font-size:10.0pt'>    </span><span lang=EN-US>#  Support
  Vector Machine</span></p>
  <p class=MsoListParagraphCxSpLast style='text-align:justify;text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts$GD.*</span><span
  lang=EN-US style='font-size:10.0pt'>       </span><span lang=EN-US>#  graphic
  device issues</span></p>
  </td>
 </tr>
 <tr style='height:13.75pt'>
  <td width=70 valign=top style='width:52.85pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US
  style='font-size:10.0pt;font-family:"Courier New"'>d<a name=dset></a>set</span></p>
  </td>
  <td width=549 valign=top style='width:411.55pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US>preprocessed
  data set (used within main_TASK and its subfunctions)</span></p>
  </td>
 </tr>
 <tr style='height:13.75pt'>
  <td width=70 valign=top style='width:52.85pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US
  style='font-size:10.0pt;font-family:"Courier New"'>result</span></p>
  </td>
  <td width=549 valign=top style='width:411.55pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal><span lang=EN-US>li<a name="details_result"></a>st with
  results from Phase 1: <br>
  In the case of regression, this object of class <b>TDMregressor</b> contains
  (see tdmRegress.r):</span></p>
  <p class=MsoListParagraphCxSpFirst style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts</span><span
  lang=EN-US>           # with some settings perhaps adjusted in tdmRegress</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>lastRes</span><span
  lang=EN-US>    # last run, last fold: list of class <b>tdmRegr</b> from tdmRegress
  </span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>R_train</span><span
  lang=EN-US>     # RMAE on training set (vector of length NRUN)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>S_train</span><span
  lang=EN-US>     # RMSE on training set (vector of length NRUN)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>T_train</span><span
  lang=EN-US>     # Theil's U for RMAE on training set (vector of length NRUN)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>*_test</span><span
  lang=EN-US>       # --- similar, with test set instead of training set</span></p>
  <p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>y</span><span
  lang=EN-US>                    # what to be minized by SPOT, usually </span><span
  lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>mean(R_test)</span></p>
  <p class=MsoNormal><span lang=EN-US>In the case of classification, this object
  of class <b>TDMclassifier</b> contains (see tdmClassify.r):</span></p>
  <p class=MsoListParagraphCxSpFirst style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts</span><span
  lang=EN-US>           # with some settings perhaps adjusted in tdmClassify</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>lastRes</span><span
  lang=EN-US>    # last run, last fold: list of class <b>tdmClass</b> from tdmClassify
  </span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>C_train</span><span
  lang=EN-US>     # classification error on training set (vector of length
  NRUN)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>G_train</span><span
  lang=EN-US>     # gain on training set (vector of length NRUN)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>R_train</span><span
  lang=EN-US>     # relativ gain (% of max. gain) on training set (vector of
  length NRUN)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>*_test</span><span
  lang=EN-US>       # --- similar, with test set instead of training set</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>*_test2</span><span
  lang=EN-US>     # --- similar, with test2 set instead of training set</span></p>
  <p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>y</span><span
  lang=EN-US>                    # what to be minized by SPOT, usually </span><span
  lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>mean(-R_test)</span></p>
  </td>
 </tr>
 <tr style='height:13.75pt'>
  <td width=70 valign=top style='width:52.85pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US
  style='font-size:10.0pt;font-family:"Courier New"'>lastRes</span></p>
  </td>
  <td width=549 valign=top style='width:411.55pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal><span lang=EN-US>list with results from
  tdmClassify/tdmRegress: <br>
  In the case of classification, this list of class <b>tdmClass</b> contains
  (see tdmClassify.r):</span></p>
  <p class=MsoListParagraphCxSpFirst style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts</span><span
  lang=EN-US>           # with some settings perhaps adjusted </span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>d_train</span><span
  lang=EN-US>    # training set + predicted class column(s)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>d_test</span><span
  lang=EN-US>      # test set + predicted class column(s)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>d_dis</span><span
  lang=EN-US>        # disregard set + predicted class column(s)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>sumEVAL</span><span
  lang=EN-US>    # list of evaluation measures, summed over all response
  variables</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>allEVAL</span><span
  lang=EN-US>    # data frame with evaluation measures, one row for each target</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>lastCm*</span><span
  lang=EN-US>    # confusion matrix for * = train or test</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>lastModel</span><span
  lang=EN-US> # the trained model (for last response variable)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>lastPred</span><span
  lang=EN-US>       # name of prediction column</span></p>
  <p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>lastProbs</span><span
  lang=EN-US>    # a list with three probability matrices (row: records, col:
  classes)<br>
                           #  </span><span lang=EN-US style='font-size:9.0pt;
  font-family:"Courier New"'>v_train, v_test, v_dis</span><span lang=EN-US>  if
  the model provides probabilities.</span></p>
  <p class=MsoNormal><span lang=EN-US>In the case of regression, this list of
  class <b>tdmRegre</b> and contains (see tdmRegress.r):</span></p>
  <p class=MsoListParagraphCxSpFirst style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts</span><span
  lang=EN-US>           # with some settings perhaps adjusted </span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>d_train</span><span
  lang=EN-US>    # training set + predicted regression column(s)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>d_test</span><span
  lang=EN-US>      # test set + predicted regression column(s)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>rmse</span><span
  lang=EN-US>            # root mean square error, summed over all
  response.variables</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>rmae</span><span
  lang=EN-US>           # relative mean absolute error, summed over all
  response.variables</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>allRMAE
  </span><span lang=EN-US> # RMAE for each response.variable</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>lastModel</span><span
  lang=EN-US> # the trained model (for last response variable)</span></p>
  <p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>y</span><span
  lang=EN-US>                     # what to be minized by SPOT, usually </span><span
  lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>mean(-R_test)</span></p>
  </td>
 </tr>
 <tr style='height:13.75pt'>
  <td width=70 valign=top style='width:52.85pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US
  style='font-size:10.0pt;font-family:"Courier New"'>t<a name=tdm></a>dm</span></p>
  </td>
  <td width=549 valign=top style='width:411.55pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US>list with
  settings for Phase 2 and 3. Elements are </span></p>
  <p class=MsoListParagraphCxSpFirst style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>mainFile</span><span
  lang=EN-US style='font-size:10.0pt'> </span><span lang=EN-US>(with path
  relative to current dir)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>mainCommand</span><span
  lang=EN-US> (string, e.g. &quot;result &lt;- main_sonar(opts) &quot;)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>unbiasedFunc</span><span
  lang=EN-US> (string, e.g. &quot;unbiasedBestRun_C&quot;)</span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>umode</span><span
  lang=EN-US>: list of unbiased evaluation modes, with elements from
  {TST,RSUB,CV,SP_T}, see tdmMapDesign.r, tdmCompleteEval.r </span></p>
  <p class=MsoListParagraphCxSpMiddle style='text-align:justify;text-indent:
  -18.0pt'><span lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>finalFile</span><span
  lang=EN-US>, (string, e.g. &quot;sonar.fin&quot;)</span></p>
  <p class=MsoListParagraphCxSpLast style='text-align:justify;text-indent:-18.0pt'><span
  lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
  </span></span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>withParams</span><span
  lang=EN-US>: T/F, has theFinals columns with best parameters?</span></p>
  </td>
 </tr>
 <tr style='height:13.75pt'>
  <td width=70 valign=top style='width:52.85pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US
  style='font-size:10.0pt;font-family:"Courier New"'>finals</span></p>
  </td>
  <td width=549 valign=top style='width:411.55pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US>see </span><b><span lang=EN-US>Table</span></b><span lang=EN-US> <b>2</b></span></p>
  </td>
 </tr>
 <tr style='height:13.75pt'>
  <td width=70 valign=top style='width:52.85pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US
  style='font-size:10.0pt;font-family:"Courier New"'>envT</span></p>
  </td>
  <td width=549 valign=top style='width:411.55pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:13.75pt'>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US>environment, see
  </span><b><span lang=EN-US>Table 4</span></b></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>lastRes</span><span
lang=EN-US>: The  items  </span><span lang=EN-US style='font-size:10.0pt;
font-family:"Courier New"'>last*</span><span lang=EN-US>  are specific for the
*last* model (the one built for the last response variable in the last run and the
last fold).</span></p>

<h2><a name="_Toc319565604"><span lang=EN-US>TDMR </span></a><span lang=EN-US
style='font-family:"Courier New"'>opts</span><span lang=EN-US> Concept</span></h2>

<p class=MsoNormal><span lang=EN-US style='font-family:"Courier New"'>opts</span><span
lang=EN-US> is a long list with many parameters which control the behaviour of
main_TASK, i.e. the behaviour of Phase 1. To give this long list a better
structure, the parameters are grouped with key words after </span><span
lang=EN-US style='font-family:"Courier New"'>opts$</span><span lang=EN-US> and
before </span><span lang=EN-US style='font-family:"Courier New"'>.</span><span
lang=EN-US> (see </span><b><span
lang=EN-US>Table 3</span></b><span lang=EN-US> above).</span></p>

<p class=MsoNormal><span lang=EN-US>See </span><span lang=EN-US
style='font-family:"Courier New"'>help(opts)</span><span lang=EN-US> for a
complete list of all elements in </span><span lang=EN-US style='font-family:
"Courier New"'>opts</span><span lang=EN-US>.</span></p>

<p class=MsoNormal><span lang=EN-US>There are some other parameters in opts
which do not fall in any of the above groups, e.g.</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>opts$NRUN</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>opts$VERBOSE</span></p>

<p class=MsoNormal><span lang=EN-US>and others.</span></p>

<p class=MsoNormal><span lang=EN-US>You might either specify all
opts-parameters in your application (i.e. main_TASK.r or *.apd) or you might use
tdmOptsDefaultsSet() and specify only those of the opts-parameters which differ
from this defaults or you enter main_TASK.r with a partially filled opts and
leave the rest to function tdmFillOptsDefaults (in tdmOptsDefaults.r), which is
called from main_TASK <u>after</u> the users opts-settings (because some
settings might depend on these settings of the user).</span></p>

<p class=MsoNormal><span lang=EN-US>Details: </span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>For type safety, each
object opts should be created as<br>
               opts = tdmOptsDefaultsSet()<br>
and <span style='text-transform:uppercase'>not</span> with opts = list().</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>If the list opts is
extended by element X in the future, you need only to add a default
specification of opts$X in function </span><span lang=EN-US>tdmOptsDefaultsSet</span><span
lang=EN-US style='font-size:10.0pt'>, and all functions called from main_TASK
will inherit this default behaviour. </span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>Why are there two
functions </span><span lang=EN-US>tdmOptsDefaultsFill</span><span lang=EN-US
style='font-size:10.0pt'>  and </span><span lang=EN-US>tdmOptsDefaultsSet</span><span
lang=EN-US style='font-size:10.0pt'>?  </span><span lang=EN-US>tdmOptsDefaultsSet
</span><span lang=EN-US style='font-size:10.0pt'> sets the defaults
unconditionally while </span><span lang=EN-US>tdmOptsDefaultsFill</span><span
lang=EN-US style='font-size:10.0pt'>   fills in further defaults which may
depend on actual settings of opts (e.g. derived elements like opts$LOGFILE,
which is derived from opts$filename as &lt;opts$filename&gt;.log)</span></p>

<h2><a name="_Toc319565605"></a><a name="_TDM_RGain_Concept"></a><a
name="_TDMR_RGain_Concept"></a><span lang=EN-US>TDMR </span><span lang=EN-US
style='font-family:"Courier New"'>RGain</span><span lang=EN-US> Concept</span></h2>

<p class=MsoNormal><span lang=EN-US>For <b>classification</b>: The R_-elements (i.e.
result$R_train and result$R_test) can contain different things, depending on
the value of opts$rgain.type:</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>rgain or NULL [def.]: the relative gain in
percent, i.e. the gain actually achieved divided by the maximal achievable gain
on the given data set,</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>meanCA: mean class accuracy: For each class
the accuracy on the data set is calculated and the mean over all classes is
returned,</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US>-<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>minCA: same as meanCA, but with min instead
of mean. For a two-class problem this is equivalent to maximizing the
min(Specifity,Sensitivity) (see </span><a
href="../../../../../../../../../../../Dokumente%20und%20Einstellungen/wolfgang/Anwendungsdaten/Microsoft/Word/Benchmark-Datasets.doc#AppQSAR"><span
lang=EN-US>here</span></a><span lang=EN-US>).</span></p>

<p class=MsoNormal><span lang=EN-US>In each classification case, TDMR seeks to minimize
result$R_train, i.e. to maximize result$R_train. </span></p>

<p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt;text-autospace:
none'><span lang=EN-US>For <b>regression</b>: </span><span lang=EN-US>The
R_&#8208;elements (i.e. result$R_train and result$R_test) can contain different
things, depending on the value of opts$rgain.type:</span></p>

<p class=MsoListParagraphCxSpFirst style='margin-bottom:0cm;margin-bottom:.0001pt;
text-indent:-18.0pt;text-autospace:none'><span lang=EN-US>-<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>rmae or NULL [def.]: the relative mean
absolute error RMAE, i.e. the mean &lt;|y  y</span><span lang=EN-US
style='font-size:7.0pt'>(pred)</span><span lang=EN-US>|&gt; divided by the mean
&lt;|y|&gt;,</span></p>

<p class=MsoListParagraphCxSpLast style='margin-bottom:0cm;margin-bottom:.0001pt;
text-indent:-18.0pt;text-autospace:none'><span lang=EN-US>-<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>rmse: root mean square error.</span></p>

<p class=MsoNormal><span lang=EN-US>In each regression case, TDMR seeks to minimize
result$R_train.</span></p>

<h2><a name="_Toc319565606"><span lang=EN-US>Example Usage</span></a></h2>

<p class=MsoNormal><span lang=EN-US>The usage of the TDMR workflow is fairly
easy. We show it for the three workflow phases and for the example of the SONAR
classification task.</span></p>

<h3><a name="_Toc319565607"></a><a name="_Phase_1:_DM"></a><span lang=EN-US>Phase
1: DM on task SONAR</span></h3>

<p class=MsoNormal><span lang=EN-US>If you want to build a DM classification
model for the SONAR data (see UCI repository or package mlbench for further
info on SONAR), you write a file main_sonar.r in directory ClassifyTemplate:</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0
 style='margin-left:5.4pt;background:#F2F2F2;border-collapse:collapse;
 border:none'>
 <tr>
  <td width=607 valign=top style='width:455.2pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Arial Narrow","sans-serif"'>main_sonar
  &lt;- function(opts=NULL, dset=NULL) {            </span></p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Arial Narrow","sans-serif"'>                tdmPath
  &lt;- &quot;../tdm&quot;;</span></p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Arial Narrow","sans-serif"'>                source(paste(tdmPath,&quot;source.tdm.r&quot;,sep=&quot;/&quot;)); 
  source.tdm(tdmPath);</span></p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Arial Narrow","sans-serif"'>                if
  (is.null(opts)) {</span></p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Arial Narrow","sans-serif"'>                 
      opts = tdmOptsDefaultsSet();           # set initial defaults for many
  elements  of opts. See tdmOptsDefaults.r</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>                                                               #
  for the list of those elements and many explanatory comments</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>      opts$filename =
  &quot;sonar.txt&quot;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>      opts$data.title &lt;-
  &quot;Sonar Data&quot;</span></p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Arial Narrow","sans-serif"'>                }</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>opts &lt;- tdmOptsDefaultsFill
  (opts);         # fill in all opts params which are not yet set (see
  tdmOptsDefaults.r)</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>    </span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>gdObj&lt;-tdmGraAndLogInitialize(opts);   #
  init graphics and log file</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>    </span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>#===============================================</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'># PART 1: READ DATA</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>#===============================================</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>if (is.null(dset)) {</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>      cat1(opts,opts$filename,&quot;:
  Read data ...\n&quot;)</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>      dset &lt;-
  tdmReadData(opts);</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>}</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>names(dset)[61] &lt;-
  &quot;Class&quot;                    # 60 columns V1,...,V60 with input data,
  </span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>                                                  
              # one response column &quot;Class&quot; with levels
  [&quot;M&quot; (metal) | &quot;R&quot; (rock)] </span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>    <br>
  response.variable &lt;- &quot;Class&quot;                  # which variable
  is response variable</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'> </span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'># which variables are input
  variables (in this case all others):</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>input.variables &lt;-
  setdiff(names(dset), c(response.variable))</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>#===============================================</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'># PART 2: Model building and
  evaluation</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>#===============================================</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>result &lt;-
  tdmClassifyLoop(dset,response.variable,input.variables,opts);</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'># print summary output and
  attach certain columns (here: y, sd.y, dset) to list result:</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>result &lt;-
  tdmClassifySummary(result,opts,dset);</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>tdmGraAndLogFinalize(opts,gdObj);      #
  close graphics and log file</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>result;  </span></p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Arial Narrow","sans-serif"'>}</span></p>
  </td>
 </tr>
 <tr>
  <td width=607 valign=top style='width:455.2pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>This function is invoked with </span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0
 style='margin-left:5.4pt;background:#F2F2F2;border-collapse:collapse;
 border:none'>
 <tr>
  <td width=607 valign=top style='width:455.2pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'> 
  result &lt;- main_sonar();</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>The control flow will pass through the
branch </span><span lang=EN-US style='font-family:"Arial Narrow","sans-serif"'>if
(is.null(opts))</span><span lang=EN-US>, where all defaults for opts are set
with function tdmOptsDefaultsSet(). This specifies for example, that an RF
model will be built. The dataset will be divided in a training part (90%) and
test part (10%), based on opts$TST.kind=rand, opts$TST.frac=0.1. You need to
specify only those things which differ from tdmOptsDefaultsSet(): in this case
the filename of the SONAR dataset. Since you do not specify anything from the
opts$SRF-block, you use the default SRF variable ranking (opts$SRF.kind =xperc,
opts$SRF.Xperc=0.95). This means that the most important columns containing
about 95% of the overall importance will be selected.</span></p>

<p class=MsoNormal><span lang=EN-US>You need to specify what column in dset is
response variable (classification target) and what columns are used for input
(in this case all the others, because the SONAR dataset does not have ID
columns or otherwise irrelevant columns).</span></p>

<p class=MsoNormal><span lang=EN-US>Function tdmClassifyLoop() is started, it
builds an RF model using the training data and evaluates it on training and
test data.</span></p>

<p class=MsoNormal><span lang=EN-US>Some output:</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>sonar.txt : Train RF
(importance) ...</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>Target levels:  M R </span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>sonar.txt : Saving sorted RF
importance to file ./Output/sonar.txt.SRF.Class.Rdata ...</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>Variables sorted by importance
(60 ):</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>[1] &quot;V9&quot; 
&quot;V11&quot; &quot;V12&quot; &quot;V10&quot; </span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>Dropped columns (8 [=  4.8% of
total importance]):</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>[1] &quot;V1&quot; 
&quot;V30&quot; &quot;V60&quot; &quot;V56&quot; &quot;V41&quot; &quot;V24&quot;
&quot;V25&quot; &quot;V57&quot;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>Training cases ( 188 ):</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>            predicted</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>actual   M    R</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>       M  98    8</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>       R  22   60</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>total gain:   158.0 (is  
0.840% of max. gain =   188.0)</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>Some graphics output:</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=307 valign=top style='width:230.3pt;border:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='page-break-after:avoid'><img border=0 width=321
  height=287 id="Grafik 1" src="TDM-docu-Dateien/image001.jpg"
  alt="Beschreibung: C:\WUTemp\FH-MassenDaten\fiwa_soma\trunk\src\R-DM-Template\Docu.d\importance.png"></p>
  <p class=MsoCaption><a name="_Ref284364992"><span lang=EN-US>Figure </span></a><span lang=EN-US>1</span><span lang=EN-US>: RF-based variable importance for task <span
  style='text-transform:uppercase'>sonar</span>.</span></p>
  </td>
  <td width=307 valign=top style='width:230.3pt;border:solid windowtext 1.0pt;
  border-left:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='page-break-after:avoid'><span lang=EN-US>&nbsp;</span></p>
  <p class=MsoNormal style='page-break-after:avoid'><img border=0 width=266
  height=266 id="Grafik 2" src="TDM-docu-Dateien/image002.jpg"
  alt="Beschreibung: C:\WUTemp\FH-MassenDaten\fiwa_soma\trunk\src\R-DM-Template\Docu.d\true-false.png"></p>
  <p class=MsoCaption><a name="_Ref284365033"><span lang=EN-US>Figure </span></a><span lang=EN-US>2</span><span lang=EN-US>: True/false classification for the two
  classes M and R of task <span style='text-transform:uppercase'>sonar</span>.</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>The two plots in </span><span
lang=EN-US>Figure 1</span><span lang=EN-US> show the RF-based importance, where
MeanDecreaseAccuracy, which has V9, V11 and V12 as the most important
variables, is the more reliable measure. The right plot in </span><span lang=EN-US>Figure 2</span><span lang=EN-US> shows the true/false classifications
on the test set (which is here however rather small, so the results are not
very reliable, a more reliable test set classification would be obtained with
CV). </span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc319565608"></a><a name="_Phase_2:_SPOT"></a><span lang=EN-US>Phase
2: SPOT tuning on task SONAR</span></h3>

<p class=MsoNormal><span lang=EN-US>If you want to do a SPOT tuning on task
SONAR, you should follow the steps described in </span><a
href="#_Phase_2:_Tuned"><span lang=EN-US>TDMR Workflow, Phase 2</span></a><span
lang=EN-US> and create the three small files sonar.conf, sonar.apd and
sonar.roi. The files content may look for example like this: </span></p>

<p class=MsoNormal><span lang=EN-US>sonar_01.conf: </span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>alg.language =
&quot;sourceR&quot;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>alg.path=&quot;.&quot;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>alg.func = &quot;tdmStartSpot&quot;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>alg.resultColumn =
&quot;Y&quot;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>alg.seed = 1235</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>io.apdFileName =
&quot;sonar_01.apd&quot;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>io.roiFileName =
&quot;sonar_01.roi&quot;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>io.verbosity = 3;       </span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>auto.loop.steps = 50;       #
number of SPOTs sequential generations</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>auto.loop.nevals = 100;   #
concurrently, max number of algo evaluations may be specified</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>init.design.func =
&quot;spotCreateDesignLhd&quot;;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>init.design.size = 10;       #
number of initial design points</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>init.design.repeats = 1;   #
number of initial repeats</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>seq.merge.func &lt;- mean;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>seq.design.size = 100;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>seq.design.retries = 15;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>seq.design.maxRepeats = 2;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>seq.design.oldBest.size &lt;-
1;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>seq.design.new.size &lt;- 3;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>seq.predictionModel.func =
&quot;spotPredictRandomForest&quot;;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>report.func =
&quot;spotReportSens&quot;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>sonar_01.apd:</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>if
(is.na(match(&quot;tdm&quot;,ls()))) tdm &lt;- list(); </span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>tdm$mainFile &lt;-
&quot;../../ClassifyTemplate/main_sonar.r&quot;;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>tdm$mainCommand &lt;-
&quot;result &lt;- main_sonar(opts)&quot;;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>opts = tdmOptsDefaultsSet();    
# set initial defaults for many elements of opts. </span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>opts$filename =
&quot;sonar.txt&quot;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>opts$data.title &lt;-
&quot;Sonar Data&quot;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>opts$RF.mtry = 4</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>opts$NRUN =  1          # how
many runs with different train &amp; test samples  - or - </span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>                                    #
how many CV-runs, if TST.kind=&quot;cv&quot;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>opts$GRAPHDEV=&quot;non&quot;;                             
</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>opts$GD.RESTART=F;       </span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span style='font-size:10.0pt;
font-family:"Arial Narrow","sans-serif"'>opts$VERBOSE= opts$SRF.verbose = 0;      </span></p>

<p class=MsoNormal>&nbsp;</p>

<p class=MsoNormal><span lang=EN-US>sonar_01.roi:</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>name low high
type                                               </span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>CUTOFF1 0.1 0.80 FLOAT</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>CLASSWT2 5 15 FLOAT</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>XPERC 0.90 1.00 FLOAT</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>The three parameter CUTOFF1, CLASSWT2 and
XPERC are tuned within the borders specified by sonar_01.roi. Usually you
should set opts$GRAPHDEV=non and opts$GD.RESTART=F to avoid any graphic
output and any graphics device closing from main_sonar.r, so that you get only
the graphics made by SPOT.  </span></p>

<p class=MsoNormal><span lang=EN-US>After this preparation, the SPOT tuning is
started with:</span></p>

<p class=MsoNormal><span lang=EN-US><br>
</span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>script_phase2.r:<a
href="#_ftn2" name="_ftnref2" title=""><span class=MsoFootnoteReference><span
class=MsoFootnoteReference><span lang=EN-US style='font-size:10.0pt;font-family:
"Courier New"'>[2]</span></span></span></a></span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0
 style='margin-left:5.4pt;background:#F2F2F2;border-collapse:collapse;
 border:none'>
 <tr>
  <td width=605 valign=top style='width:16.0cm;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>tdm=list(mainCommand=&quot;result&lt;-main_sonar(opts)&quot;,mainFile=&quot;main_sonar.r&quot;);</span></p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts &lt;-
  NULL;</span></p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>source(&quot;sonar_01.apd&quot;);     
  # read in opts-settings</span></p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>source(tdm$mainFile);</span></p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>spotUserConfig
  = list(tdm=tdm,spot.fileMode=F, opts=opts);</span></p>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>spotConfig =
  spot(&quot;sonar_01.conf<a name="OLE_LINK4"></a><a name="OLE_LINK3">&quot;</a>,&quot;auto&quot;,spotConfig=spotUserConfig);</span></p>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>It will generate the usual SPOT result
files (see SPOT manual [Bart10e]) </span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>sonar_01.res</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US>-<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><img width=313 height=313 src="TDM-docu-Dateien/image003.jpg"
align=left hspace=12
alt="Beschreibung: C:\WUTemp\FH-MassenDaten\fiwa_soma\trunk\src\R-DM-Template\Docu.d\sonar_sensitivity.png"><span
lang=EN-US>sonar_01.bst</span></p>

<p class=MsoNormal><span lang=EN-US>The tuning will stop after 16 sequential
steps with the configuration CONFIG=58, because the budget of
auto.loop.nevals=100 evaluations is exhausted. The best solution can be seen
from the <u>last</u> line of sonar_01.bst (or alternatively from the printout
of spotConfig$alg.currentBest). </span></p>

<p class=MsoNormal><span lang=EN-US>With </span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0
 style='margin-left:5.4pt;background:#F2F2F2;border-collapse:collapse;
 border:none'>
 <tr>
  <td width=274 valign=top style='width:205.55pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'> 
  spot(sonar_01.conf,rep);</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US> </span></p>

<p class=MsoNormal><span lang=EN-US>the results from a prior tuning run
producing sonar_01.res are read in again and a report including a sensitivity
plot (see </span><span lang=EN-US>Figure 3</span><span lang=EN-US>) is made.</span></p>

<p class=MsoNormal><img width=313 height=54 src="TDM-docu-Dateien/image004.png"
align=left hspace=12
alt="Figure 3: Sensitivity plot. Each ROI [low,high] is mapped to the normalized ROI [-1,1] on the abscissa."></p>

<p class=MsoNormal><span lang=EN-US>De<a name="details_phase2"></a>tails: </span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>When
spot(sonar_01.conf,auto) is invoked, the following things happen:</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>SPOT is started, reads
from sonar_01.conf that it has to call the inner function <br>
</span><span lang=EN-US style='font-size:10.0pt;font-family:"Arial Narrow","sans-serif"'>               alg.func
= &quot;tdmStartSpot&quot;. </span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>tdmStartSpot(spotConfig)
gets with the elements tdm and opts of spotConfig the required information</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:70.8pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>tdm$mainFile &lt;-
&quot;main_sonar.r&quot;;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:70.8pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>tdm$mainCommand &lt;-
&quot;result &lt;- main_sonar(opts)&quot;;</span></p>

<p class=MsoListParagraphCxSpFirst><span lang=EN-US style='font-size:10.0pt'>changes
to the directory of tdm$mainFile (current dir in the case of this example) and
invokes the DM template main_sonar.r to with </span><span lang=EN-US
style='font-size:9.0pt;font-family:"Courier New"'>result &lt;- main_sonar(opts)</span><span
lang=EN-US style='font-size:10.0pt;font-family:"Arial Narrow","sans-serif"'>.</span><span
lang=EN-US style='font-size:10.0pt'> </span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>Now tdm$mainCommand is
started and runs the data mining process. The DM template main_sonar is
provided by the user. The only requirement of SPOT or other tuners for the
function main_sonar is that it returns in <br>
               result$y<br>
a suitable quantity to be <b>minimized</b> by SPOT.</span></p>

<p class=MsoNormal><a name="_Phase_3:_The_1"></a><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>More details: </span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>For a new task TASK,
the </span><a href="#opts"><span lang=EN-US style='font-size:10.0pt'>opts</span></a><span
lang=EN-US style='font-size:10.0pt'>-part of .apd can usually be copied from
the </span><a href="#opts"><span lang=EN-US style='font-size:10.0pt'>opts</span></a><span
lang=EN-US style='font-size:10.0pt'>-part of main_TASK.  </span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>Usually, TASK_02.apd,
TASK_03.apd,  will start with </span><span lang=EN-US style='font-size:9.0pt;
font-family:"Courier New"'>source(TASK_01.apd,local=T)</span><span lang=EN-US
style='font-size:10.0pt'> and will only specify those elements of </span><a
href="#opts"><span lang=EN-US>opts</span></a><span lang=EN-US style='font-size:
10.0pt'> which need to be different. </span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>For reproducability of
experiments each TDMR task should get its own task name TASK_01, TASK_02,  and
the associated set of files (.apd, .conf, .roi ) should kept unchanged for
further reference. DO NOT alter later the settings in a TDMR task file (unless
you want to delete and overwrite the old experiment), but create a new TASK_xx
with its own set of files. </span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>If a new parameter
appears in a .roi file which never appeared in any other .roi file before, a
line has to be added to tdmMapDesign.csv, specifying the mapping of this
parameter to the corresponding element of </span><a href="#opts"><span
lang=EN-US style='font-size:10.0pt'>opts</span></a><span lang=EN-US
style='font-size:10.0pt'>. (</span><a href="#_TDMR_Design_Mappping"><i><span
lang=EN-US style='font-size:10.0pt'>more details here</span></i></a><span
lang=EN-US style='font-size:10.0pt'>)</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>For the current TDMR
package version, SPOT is loaded from the CRAN package version, which has been
installed as library in the usual way. This is the case when tdm$theSpotPath is
either  NA or NULL.<br>
If you want to load SPOT from source files in pre-defined loacations (see </span><a
href="../../../../../../../../../../../Dokumente%20und%20Einstellungen/wolfgang/Anwendungsdaten/Microsoft/tdm/source.tdm.r"><span
lang=EN-US style='font-size:10.0pt'>source.tdm.R</span></a><span lang=EN-US
style='font-size:10.0pt'>), set<br>
               tdm$theSpotPath &lt;- USE.SOURCE;<br>
If you want to load SPOT from your own source directory, set tdm$theSpotPath to
this directory.</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>How does SPOT handle
it, if confFile and spotConfig are both present, e.g. in a call  </span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>spot(confFile,&quot;auto&quot;,spotConfig)</span><span
lang=EN-US style='font-size:10.0pt'>: </span></p>

<ul style='margin-top:0cm' type=disc>
 <ul style='margin-top:0cm' type=circle>
  <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
      lang=EN-US style='font-size:10.0pt'>Initial defaults for all elements in
      spotConfig are set inside SPOT (see spotGetOptions.R). </span></li>
  <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
      lang=EN-US style='font-size:10.0pt'>If </span><span lang=EN-US
      style='font-size:10.0pt;font-family:"Courier New"'>confFile</span><span
      lang=EN-US style='font-size:10.0pt'> exists (only then!), it is read and
      settings found in </span><span lang=EN-US style='font-size:10.0pt;
      font-family:"Courier New"'>confFile</span><span lang=EN-US
      style='font-size:10.0pt'> overwrite the defaults from spotGetOptions.R. </span></li>
  <li class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
      lang=EN-US style='font-size:10.0pt'>If </span><span lang=EN-US
      style='font-size:10.0pt;font-family:"Courier New"'>spot</span><span
      lang=EN-US style='font-size:10.0pt'> is called with parameter spotConfig
      present, then the elements found in this command line parameter overwrite
      the settings of step 2. </span></li>
 </ul>
</ul>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:72.0pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt'>&nbsp;</span></p>

<h3><a name="_Toc319565609"></a><a name="_Phase_3:_The_2"></a><span
lang=EN-US>Phase 3: The Big Loop on task SONAR</span></h3>

<p class=MsoNormal><span lang=EN-US>To start The Big Loop, you configure a
file script_all.R (a template is in </span><a href="#inst"><span lang=EN-US>inst</span></a><span
lang=EN-US>/demo02sonar/), which may look like this:</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0
 style='margin-left:5.4pt;background:#F2F2F2;border-collapse:collapse;
 border:none'>
 <tr>
  <td width=607 valign=top style='width:455.2pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-bottom:0cm;margin-bottom:.0001pt'><span
  lang=EN-US style='font-size:10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>tdm &lt;- list(tdmPath=NULL      #
  from where to load TDMR: if NULL, load package TDMR, </span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>                                               #
  else: source R-files from this dir</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>            , unbiasedFunc=&quot;unbiasedBestRun_C&quot;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>            ,
  umode=c(&quot;CV&quot;)     # ,&quot;RSUB&quot;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>            , mainFile=&quot;main_sonar.r&quot;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>            ,
  mainCommand=&quot;result &lt;- main_sonar(opts)&quot;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>            , tuneMethod=c(&quot;spot&quot;,&quot;lhd&quot;)  
  #  [&quot;spot&quot;   &quot;cmaes&quot;   &quot;bfgs&quot; &quot;lhd&quot; ]</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>            ,
  finalFile=&quot;sonar.fin&quot;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>            , experFile=NULL
  # &quot;sonar.exp&quot;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>            , nrun=3,
  nfold=2        # repeats and CV-folds for the unbiased runs</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>            ,
  optsVerbosity=0        # the verbosity for the unbiased runs</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>            , withParams=TRUE</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>            , nExperim=2</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>            , parallelCPUs =
  1         # [1] 1: sequential, &gt;1: parallel with snowFall and this many
  cpus</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>            );</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>runList = c(&quot;sonar_02.conf&quot;,&quot;sonar_03.conf&quot;);
  </span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>spotList = NULL # list();         # 
  =NULL: all in runList; =list(): none</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>spotStep = &quot;auto&quot;;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
  margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>envT &lt;-
  tdmCompleteEval(runList,spotList,spotStep,tdm);</span></p>
  </td>
 </tr>
 <tr>
  <td width=607 valign=top style='width:455.2pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0cm;margin-right:0cm;margin-bottom:0cm;
margin-left:35.4pt;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>script_all.R specifies a list of TDMR tasks
in runList (a list of .conf files), specifies a list of tuners in </span><a
href="#tdm"><span lang=EN-US style='color:windowtext;text-decoration:none'>tdm</span></a><span
lang=EN-US>$tuneMethod, e.g. c(spot,cmaes), sets other values of </span><a
href="#tdm"><span lang=EN-US style='color:windowtext;text-decoration:none'>tdm</span></a><span
lang=EN-US> and calls tdmCompleteEval.</span></p>

<p class=MsoNormal><span lang=EN-US>Here, this script will trigger the
following sequence of experiments: </span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US>-<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>sonar_02.conf is started with tuner (a) lhd and
(b) spot</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US>-<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>sonar_03.conf is started with tuner (a) lhd and
(b) spot</span></p>

<p class=MsoNormal><span lang=EN-US>This sequence of 4 tuning experiments is
repeated nExperim=2 times. The corresponding 8 result lines are written to
tdm$finalFile. If (tdm$experFile != NULL), these lines are also appended to
file tdm$experFile. The switch withParams=TRUE is only sensible if both .conf
files have the same set of parameters in their .roi file.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:6.0pt'><span lang=EN-US>The result </span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>theFinals</span><span
lang=EN-US> from the last experiment (4 result lines) is in file sonar.fin:</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0 width=633
 style='width:474.9pt;margin-left:-8.8pt;background:#F2F2F2;border-collapse:
 collapse;border:none'>
 <tr>
  <td width=633 valign=top style='width:474.9pt;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal style='margin-top:0cm;margin-right:-21.3pt;margin-bottom:
  0cm;margin-left:0cm;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:-21.3pt;margin-bottom:
  0cm;margin-left:0cm;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>CONF TUNER  CLASSWT2    
  XPERC NRUN NEVAL RGain.bst RGain.avg RGain.OOB   sdR.OOB RGain.RSUB sdR.RSUB</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:-21.3pt;margin-bottom:
  0cm;margin-left:0cm;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>sonar_02   lhd     12.026543  0.930197  
    3       36         86.70213     84.3676        84.4311    1.03715       83.73984
       5.63268</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:-21.3pt;margin-bottom:
  0cm;margin-left:0cm;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>sonar_02  spot    14.713475  0.981312  
    3       36         86.96809     84.6926        85.6287    1.03715       86.99187
       7.04085</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:-21.3pt;margin-bottom:
  0cm;margin-left:0cm;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>sonar_03   lhd       8.037636
   0.954494     3       36         81.91489     78.6643        80.4391    1.82937 
       79.67480      7.45134</span></p>
  <p class=MsoNormal style='margin-top:0cm;margin-right:-21.3pt;margin-bottom:
  0cm;margin-left:0cm;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
  10.0pt;font-family:"Arial Narrow","sans-serif"'>sonar_03  spot      7.375221  0.914740
      3       35         81.91489     78.7082        78.8423    0.34571       74.79675
       2.81634</span></p>
  <p class=MsoNormal style='text-align:justify'><span lang=EN-US
  style='font-size:10.0pt;font-family:"Courier New"'>&nbsp;</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-top:0cm;margin-right:-21.3pt;margin-bottom:
0cm;margin-left:0cm;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>Here CLASSWT2 and XPERC are the tuning
parameters, the other columns are defined in </span><span
lang=EN-US><b>Table</b> <b>2</b></span><span lang=EN-US>. </span></p>

<p class=MsoNormal><span lang=EN-US>In the case of the example above, the
tuning process had a budget of NEVAL=36 model trainings, resulting in a best
solution with class accuracy RGain.bst (in %). The average class accuracy (mean
w.r.t. all design points) during tuning is RGain.avg. When the tuning is
finished, the best solution is taken and NRUN=3 unbiased evaluation runs are
done with the parameters of the best solution. Since the classification model
in this example is RF (Random Forest), an OOB-error from the 3 trainings is
returned, with average RGain.OOB and standard deviation sdR.OOB. Additionally,
NRUN=3 trainings are done with random subsampling (RSUB) of the data set in
training and test set, resulting in an average class accuracy on the test set
RGain.RSUB and the corresponding standard deviation in sdR.RSUB. </span></p>

<p class=MsoNormal><span lang=EN-US>In this case the interpretation of the results
is quite clear: The best configuration is sonar_02.conf with TUNER spot, since
this line contains the maximum for all columns RGain.bst, RGain.avg, RGain.OOB
and RGain.RSUB. Note that the standard deviation sdR.RSUB is in this case quite
large (because the test set is very small). A more reliable result might be
obtained with CV instead of RSUB.</span></p>

<p class=MsoNormal><span lang=EN-US>Details: </span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>script_all.R should be
created in and <u>called from the TASK subdir</u> (e.g. TDM.SPOT.d/sonar/). The
.conf files in runList should reside in the same directory and should be given
w/o path (since TDMR will infer other files, e.g. sonar_01.apd, from it).  </span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>spotList is a list of
.conf files for which the tuners will be started (NULL for all from runList).
If a tuner is not started for a certain .conf file it is assumed that its .bst
file already exists from a prior run. </span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>spotStep is a list of
strings (may be shorter than runList, then it is cyclically reused) which
specifies the SPOT step to be invoked. If e.g. the step is rep (report),
then it is assumed that the .bst file already exists.</span></p>

<p class=MsoNormal><span lang=EN-US>Some more details for the developer: </span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>The unbiased
evaluations are done for each element of </span><a href="#tdm"><span
lang=EN-US style='font-size:10.0pt'>tdm</span></a><span lang=EN-US
style='font-size:10.0pt'>$umode by calling the function
unbiasedBestRun_*(,umode,) [*=C for classification and *=R for regression].
The function unbiasedBestRun_* reads in the best solution of a tuning run from
.bst file, performs a re-run (training + test) with these best parameters.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>script_all.R in the
form given above assumes that library TDMR is loaded. If you want instead to
source all necessary R-files from </span><a href="#tdm"><span lang=EN-US
style='font-size:10.0pt'>tdm</span></a><span lang=EN-US style='font-size:10.0pt'>$tdmPath
(e.g. during development) OR if you want to prepare for parallel execution (</span><a
href="#_TDMR_parallel_computing"><span lang=EN-US style='font-size:10.0pt'>more
details </span></a><span lang=EN-US style='font-size:10.0pt'>), then add the
following lines after the definition of </span><a href="#tdm"><span lang=EN-US
style='font-size:10.0pt'>tdm</span></a><span lang=EN-US style='font-size:10.0pt'>
to script_all.R:</span></p>

<p class=MsoListParagraphCxSpLast><span lang=EN-US style='font-size:9.0pt'>&nbsp;</span></p>

<table class=MsoTableGrid border=0 cellspacing=0 cellpadding=0
 style='margin-left:40.85pt;background:#F2F2F2;border-collapse:collapse;
 border:none'>
 <tr>
  <td width=529 valign=top style='width:14.0cm;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US style='font-size:9.0pt;font-family:"Courier New"'> 
  tdm$theSpotPath &lt;- NA;</span></p>
  <p class=MsoNormal><span lang=EN-US style='font-size:9.0pt;font-family:"Courier New"'> 
  start.tdm.path &lt;- ifelse(is.null(tdm$tdmPath),            .find.package(&quot;TDMR&quot;),paste(tdm$tdmPath,&quot;inst&quot;,sep=&quot;/&quot;));
  </span></p>
  <p class=MsoNormal><span lang=EN-US style='font-size:9.0pt;font-family:"Courier New"'> 
  source(paste(start.tdm.path,&quot;start.tdm.r&quot;,sep=&quot;/&quot;),local=T);</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-left:35.4pt'><span lang=EN-US
style='font-size:9.0pt'>&nbsp;</span></p>

<p class=MsoNormal style='margin-left:35.4pt'><span lang=EN-US
style='font-size:10.0pt'>This will locate the script start.tdm.r (either in the
directory of library TDMR or in the sources) and execute it. In this way,
script_all.R can be started directly at the beginning of an R-session, w/o a
prior </span><span lang=EN-US style='font-size:9.0pt;font-family:"Courier New"'>require(TDMR)</span><span
lang=EN-US style='font-size:10.0pt'>. The line </span><span lang=EN-US
style='font-size:9.0pt;font-family:"Courier New"'>tdm$theSpotPath &lt;- NA; </span><span
lang=EN-US style='font-size:10.0pt'>means that SPOT is loaded as a package. If
it specifies instead the path to the SPOT source, then SPOTs R-files will be
sourced from there.</span></p>

<p class=MsoListParagraph style='text-indent:-18.0pt'><span lang=EN-US
style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>script_all.R starts the
definition of list </span><a href="#tdm"><span lang=EN-US style='font-size:
10.0pt'>tdm</span></a><span lang=EN-US style='font-size:10.0pt'>. If some
elements are not defd, suitable defaults will be added later to </span><a
href="#tdm"><span lang=EN-US style='font-size:10.0pt'>tdm</span></a><span
lang=EN-US style='font-size:10.0pt'> at the beginning of tdmCompleteEval with
function tdmDefaultsFill(tdm).</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:-21.3pt;margin-bottom:
0cm;margin-left:0cm;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>

<h2><a name="_Toc319565610"><span lang=EN-US>TDMR parallel computing concept</span></a></h2>

<h3><a name="_Toc319565611"><span lang=EN-US>How to use parallel computing</span></a></h3>

<p class=MsoNormal><span lang=EN-US>TDMR supports parallel computing through
the packages snow and snowfall [Knaus08, Knaus09]. Parallelization of TDMRs
phase-3-tasks is very easy, you simply have to set tdm$parallelCPUs to a
suitable value &gt;1.</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>We parallelize the tdmDispatchTuner-calls which
are currently inside the 3-fold loop {tdm$nExperim, runList, tdm$tuneMethod).
Therefore, these loops are written as sapply commands, which can be transformed
to sfSapply. </span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Four operating modes:</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='margin-left:40.85pt;border-collapse:collapse;border:none'>
 <tr style='height:8.5pt'>
  <td width=130 valign=top style='width:97.6pt;border:solid windowtext 1.0pt;
  padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdm$parallelCPUs</span></p>
  </td>
  <td width=104 valign=top style='width:77.95pt;border:solid windowtext 1.0pt;
  border-left:none;padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdm$fileMode</span></p>
  </td>
  <td width=314 valign=top style='width:235.55pt;border:solid windowtext 1.0pt;
  border-left:none;padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>mode</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=130 valign=top style='width:97.6pt;border:solid windowtext 1.0pt;
  border-top:none;padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>=1</span></p>
  </td>
  <td width=104 valign=top style='width:77.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>FALSE</span></p>
  </td>
  <td width=314 valign=top style='width:235.55pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>sequential, everything is returned via
  environment envT, no files are written</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=130 valign=top style='width:97.6pt;border:solid windowtext 1.0pt;
  border-top:none;padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>=1</span></p>
  </td>
  <td width=104 valign=top style='width:77.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>TRUE</span></p>
  </td>
  <td width=314 valign=top style='width:235.55pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>sequential, everything is returned via
  environment envT, and logged on several files</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=130 valign=top style='width:97.6pt;border:solid windowtext 1.0pt;
  border-top:none;padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>&gt;1</span></p>
  </td>
  <td width=104 valign=top style='width:77.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>FALSE</span></p>
  </td>
  <td width=314 valign=top style='width:235.55pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>parallel, everything is returned via
  environment envT, no files are written or read</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=130 valign=top style='width:97.6pt;border:solid windowtext 1.0pt;
  border-top:none;padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>&gt;1</span></p>
  </td>
  <td width=104 valign=top style='width:77.95pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>TRUE</span></p>
  </td>
  <td width=314 valign=top style='width:235.55pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>parallel, everything is returned via
  environment envT, and logged on several files</span></p>
  </td>
 </tr>
</table>

<p class=MsoListParagraph><span lang=EN-US>{=1,TRUE} is the current state of
the source code (May2011).<br>
{&gt;1,TRUE} is the parallel mode viable on maanvs-clusters at GM (they have
access to a file system), if the user is sure that the file writings cannot
interfere. For safety it is nevertheless recommended to use {&gt;1,FALSE}.<br>
[&gt;1,FALSE} is the parallel mode needed for LIDO (TU DO). It requires more
software redesign, since the code should make no file access (no sourcing, no
data set reading!) below the call to tdmDispatchTuner.</span></p>

<p class=MsoNormal><a name="_Environment_envT"></a><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>Note that a certain sfApply will try to
spawn nCPU processes, but if the last process(es) are less than nCPU, sfApply
will wait for the slowest to complete before the next sfApply takes over. So it
is an good idea to bundle as many processes as possible into one sfApply, if
you want an even load distribution over time.</span></p>

<p class=MsoNormal><span lang=EN-US>But on the other hand, it has also
advantages to send several tdmCompleteEvals because every such call will have
its own envT, which is saved on .RData at the end of function tdmCompleteEval
and so the intermediate results are preserved, even if the parallel cluster
should crash. </span></p>

<h3><a name="_Toc319565612"><span lang=EN-US>Environment envT</span></a></h3>

<p class=MsoNormal><span lang=EN-US>The environment envT is used to pass
necessary information to and back from the parallel slaves. It replaces in
nearly all cases the need for file reading or file writing. (File writing is
however still possible for the sequential case or for parallel slaves
supporting file access. File writing might be beneficial to trace the progress
of parallel or sequential tuning processes while they are running and to log the
resulting informations.)  </span></p>

<p class=MsoNormal><span lang=EN-US>Environ<a name="details_envT"></a>ment <b>envT</b>
is constructed in tdmCompleteEval. </span><span
lang=EN-US><b>Table</b> <b>4</b></span><span lang=EN-US> shows its elements and
it shows in the 3<sup>rd</sup> column which function adds these elements to
envT: </span></p>

<p class=MsoCaption><a name="_Ref305833654"><span lang=EN-US>Table </span></a><span lang=EN-US>4</span><span lang=EN-US>: Elements of environment </span><span
lang=EN-US style='font-family:"Courier New"'>envT</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='margin-left:26.7pt;border-collapse:collapse;border:none'>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>variable</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border:solid windowtext 1.0pt;
  border-left:none;padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>remark</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border:solid windowtext 1.0pt;
  border-left:none;padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>function</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>bst</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>data frame with contents of <b>last</b>
  .bst file</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdmStartOther or spotTuner, lhdTuner</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>bstGrid</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>list with all bst data frames,
  bstGrid[[k]] retrieves the kth data frame</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:1.4pt 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdmCompleteEval or populateEnvT</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>getBst(conf,tuner,n)</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>function returning from bstGrid the bst
  data frame for configuration file </span><span lang=EN-US style='font-family:
  "Courier New"'>conf</span><span lang=EN-US>, tuning method </span><span
  lang=EN-US style='font-family:"Courier New"'>tuner</span><span lang=EN-US>
  and experiment </span><span lang=EN-US style='font-family:"Courier New"'>n</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdmCompleteEval</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>res</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>data frame with contents of <b>last</b>
  .res file</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdmStart* or  tdmCompleteEval</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>resGrid</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>list with all res data frames,
  resGrid[[k]] retrieves the kth data frame</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdmCompleteEval or populateEnvT</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>getRes(conf,tuner,n)</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>function returning from resGrid the res
  data frame for configuration file </span><span lang=EN-US style='font-family:
  "Courier New"'>conf</span><span lang=EN-US>, tuning method </span><span
  lang=EN-US style='font-family:"Courier New"'>tuner</span><span lang=EN-US>
  and experiment </span><span lang=EN-US style='font-family:"Courier New"'>n</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdmCompleteEval</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>result</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>list with results of tdm$mainCommand as
  called in the <b>last</b> unbiased evaluation, see </span><b><span lang=EN-US>Table 3</span></b></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>unbiasedBestRun_C or<br>
  unbiasedBestRun_R</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>theFinals</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>data frame with one row for each res
  file, see </span><b><span lang=EN-US>Table 2</span></b></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdmCompleteEval or populateEnvT</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdm</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>opts</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tunerVal</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>the value of tdmDispatchTuner (which can
  be a long list in case of SPOT)</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdmDispatchTuner</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>spotConfig</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdmCompleteEval</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>nGrid</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>number of elements in bstGrid, resGrid</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdmCompleteEval</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>nTuner</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>length(tdm$tuneMethod)</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdmCompleteEval</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>nRunList</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>length(runList)</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdmCompleteEval</span></p>
  </td>
 </tr>
 <tr style='height:8.5pt'>
  <td width=142 valign=top style='width:106.3pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>runList</span></p>
  </td>
  <td width=265 valign=top style='width:7.0cm;border-top:none;border-left:none;
  border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>runList</span></p>
  </td>
  <td width=142 valign=top style='width:106.35pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt;height:8.5pt'>
  <p class=MsoNormal><span lang=EN-US>tdmCompleteEval</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal style='margin-left:35.4pt'><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>envT is used to pass information back and
forth between different fcts of TDMR, where envT$opts and envT$tdm pass info
into tdmStart*, while envT$res and envT$bst are used to pass info back from
tdmStart* to the main level.</span></p>

<h3><a name="_Toc319565613"><span lang=EN-US>Details</span></a></h3>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>We have in
tdmCompleteEval only one parallelization mode (parallel over experiments,
tuners and .conf files). We decided that it is sufficient to have one strategy
for parallelization, for all values of tdm$parallelCPUs. We decided that it is
dangerous to have nested sfSapply-calls.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>When does sfSapply
return?  The snowfall manual says that sfSapply first hands out nCPU jobs to
the CPUs, then waits for <u>all</u> (!) jobs to return and then hands out
another nCPU jobs until all jobs are finished. sfSapply returns when the last
job is finished. Therefore it is not clear what happens with nested
sfSapply-calls and we make our design in such a way that no such nested calls
appear.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>We added column NEXP
(=envT$nExp) to tdm$finalFile and tdm$experFile. So it might be that older .fin
and .exp files can no longer be merged with the new ones. </span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>File writing is no
longer necessary for the process, because all data needed are logged in </span><a
href="#details_envT"><span lang=EN-US style='font-size:10.0pt'>environment <b>envT</b></span></a><span
lang=EN-US style='font-size:10.0pt'>. But it may be beneficial for tracing the
progress of a long-running process. If tdm$fileMode= TRUE, each parallelizable
branch makes its writing in a separate directory (e.g. spot/, cmaes/,  for
different tuner branches and/or 01/, 02/, 03,  for different experiments with
seeds 1,2,3,). A master file might collect the information from the different
files in the end. </span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>In case
tdm$nExperim&gt;1 we write now on different .fin files, e.g. <br>
               sonar-e01.fin, sonar-e02.fin, <br>
This is to avoid that parallel executing tasks will remove or write on the same
.fin file concurrently. </span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>How and when is the res
data frame passed back from SPOT? (we get an error with spot.fileMode=F). The
bst data frame is in spotConfig$alg.currentBest.  Answer: With the new SPOT
package version (&gt;0.1.1372) and with spot.fileMode==F, the res data frame is
passed back in <a name="OLE_LINK2"></a><a name="OLE_LINK1"><b>spotConfig</b></a><b>$alg.currentResult</b>.
The user function spotConfig$alg.func is responsible for writing this data
frame. We do this for both values of spot.fileMode: we start in fcts spotTuner
and lhdTuner a new data frame <b>spotConfig$alg.currentResult</b> (initially
NULL) and fill it consecutively in tdmStartSpot.</span></p>

<p class=MsoListParagraphCxSpLast><span lang=EN-US style='font-size:10.0pt'>&nbsp;</span></p>

<h1><a name="_Toc319565614"><u><span lang=EN-US>Extending TDMR</span></u></a></h1>

<h2><a name="_Toc319565615"></a><a name="_TDMR_Tuner_Concept"></a><span
lang=EN-US>TDMR Tuner Concept</span></h2>

<h3><a name="_Toc319565616"><span lang=EN-US>How to use different tuners</span></a></h3>

<p class=MsoNormal><span lang=EN-US>If you want to tune a TDMR-task with two
tuners SPOT and CMA-ES: Simply specify</span></p>

<p class=MsoNormal><span lang=EN-US>                </span><a href="#tdm"><span
lang=EN-US>tdm</span></a><span lang=EN-US>$tuneMethod = c(spot,cmaes)</span></p>

<p class=MsoNormal><span lang=EN-US>in script_all.R and set the variable
spotStep to auto.  The tuning results (.bst and .res files) will be copied
into subdirs spot and cmaes of the directory from which you start
script_all.R.</span></p>

<p class=MsoCaption style='page-break-after:avoid'><a
name="_Tuners_available_in"></a><span lang=EN-US><br>
Table </span><span lang=EN-US>5</span><span lang=EN-US>: Tuners availabe in TDMR</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=130 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  background:#FFFFCC;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><a href="#tdm"><b><span lang=EN-US>tdm</span></b></a><b><span
  lang=EN-US>$tuneMethod</span></b></p>
  </td>
  <td width=484 valign=top style='width:363.05pt;border:solid windowtext 1.0pt;
  border-left:none;background:#FFFFCC;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><b><span lang=EN-US>Description</span></b></p>
  </td>
 </tr>
 <tr>
  <td width=130 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>spot</span></p>
  </td>
  <td width=484 valign=top style='width:363.05pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>Sequential Parameter Optimization Toolbox</span></p>
  </td>
 </tr>
 <tr>
  <td width=130 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>lhd</span></p>
  </td>
  <td width=484 valign=top style='width:363.05pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>Latin Hypercube Design (truncated SPOT,
  all budget for the initial step)</span></p>
  </td>
 </tr>
 <tr>
  <td width=130 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>cmaes</span></p>
  </td>
  <td width=484 valign=top style='width:363.05pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>Covariance Matrix Adaption ES</span></p>
  </td>
 </tr>
 <tr>
  <td width=130 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>powell</span></p>
  </td>
  <td width=484 valign=top style='width:363.05pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>Powells Method (direct &amp; local
  search)</span></p>
  </td>
 </tr>
 <tr>
  <td width=130 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>bfgs</span></p>
  </td>
  <td width=484 valign=top style='width:363.05pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>Broyden, Fletcher, Goldfarb and Shannon method
  (direct &amp; local search)</span></p>
  </td>
 </tr>
 <tr>
  <td width=130 valign=top style='width:97.55pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>bobyqa</span></p>
  </td>
  <td width=484 valign=top style='width:363.05pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>direct &amp; local search, with constraint
  handling</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc319565617"><span lang=EN-US>How to integrate new tuners</span></a></h3>

<p class=MsoNormal><span lang=EN-US>Originally TDMR was only written for SPOT
as tuning method. </span></p>

<p class=MsoNormal><span lang=EN-US>In November 2010, we started to add other
tuners to aid the comparision with SPOT on the same footing. As the first other
tuner, we introduced CMA-ES (Niko Hansen, R-package by Olaf Mersmann and
others). Since comparision with SPOT is the main issue, CMA-ES was wrapped in
such a way in tdmDispatchTuner.r that the behaviour and output is very similar
to SPOT. </span></p>

<p class=MsoNormal><span lang=EN-US>This has the following implications which should
also be obeyed when adding other tuners to TDMR:</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Each tuning method has a unique name (e.g.
spot, cmaes): this name is an allowed entry for </span><a href="#tdm"><span
lang=EN-US>tdm</span></a><span lang=EN-US>$tuneMethod and </span><a
href="#finals"><span lang=EN-US>finals</span></a><span lang=EN-US>$TUNER and it
is the name of a subdir in TDM.SPOT.d/TASK/. </span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Each tuner writes result files (.bst, .res) in a
fashion similar to SPOT. These result files are copied to the above mentioned subdir
at the end of tuning. This facilitates later comparision of results from
different tuners.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Each tuner supports at least two values for
spotStep: auto and rep (=report). In the latter case it is assumed that
.bst and .res already exist (in their subdir) and they are usually analysed
with spot(confFile,rep,).</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Each tuner reads in the .conf file and infers
from spotConfig the tuner settings (e.g. budget for function calls, max
repeats, ) and tries to make its tuning behaviour as similar to these settings
as possible.</span></p>

<p class=MsoNormal><span lang=EN-US>For the current CMA-ES tuner the relevant
source code for integration in TDMR is in functions tdmDispatchTuner and
cmaesTuner (both in tdmDispatchTuner.r) and in tdmStartCMA.r. </span></p>

<p class=MsoNormal><span lang=EN-US>These functions may be used as templates
for the integration of other tuners in the future.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc319565618"></a><a name="_TDM_Design_Mappping"></a><a
name="_TDMR_Design_Mappping"></a><span lang=EN-US>TDMR Design Mappping Concept</span></h2>

<p class=MsoNormal><span lang=EN-US>Each variable appearing in.roi file (and
thus in .des file) has to be mapped on its corresponding value in list opts.
This is done in the file <b>tdmMapDesign.csv</b>:</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=123 valign=top style='width:92.1pt;border:solid windowtext 1.0pt;
  background:#FBD4B4;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><b>roiValue   </b></p>
  </td>
  <td width=123 valign=top style='width:92.1pt;border:solid windowtext 1.0pt;
  border-left:none;background:#FBD4B4;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><b>optsValue</b></p>
  </td>
  <td width=123 valign=top style='width:92.15pt;border:solid windowtext 1.0pt;
  border-left:none;background:#FBD4B4;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><b>isInt</b></p>
  </td>
 </tr>
 <tr>
  <td width=123 valign=top style='width:92.1pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>MTRY</span></p>
  </td>
  <td width=123 valign=top style='width:92.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>opts$RF.mtry</span></p>
  </td>
  <td width=123 valign=top style='width:92.15pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>1</span></p>
  </td>
 </tr>
 <tr>
  <td width=123 valign=top style='width:92.1pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>XPERC</span></p>
  </td>
  <td width=123 valign=top style='width:92.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>opts$SRF.Xperc</span></p>
  </td>
  <td width=123 valign=top style='width:92.15pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>0</span></p>
  </td>
 </tr>
 <tr>
  <td width=123 valign=top style='width:92.1pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US></span></p>
  </td>
  <td width=123 valign=top style='width:92.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US></span></p>
  </td>
  <td width=123 valign=top style='width:92.15pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US></span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>If a variable is defined with isInt=1, it
is rounded in opts$... to the next integer, even if it is non-integer in the
design file. </span></p>

<p class=MsoNormal><span lang=EN-US>The base file <b>tdmMapDesign.csv</b> is
read from &lt;packageDir&gt; = </span><span lang=EN-US style='font-size:10.0pt;
font-family:"Courier New"'>.find.package(TDMR)</span><span lang=EN-US>.<a
href="#_ftn3" name="_ftnref3" title=""><span class=MsoFootnoteReference><span
class=MsoFootnoteReference><span lang=EN-US style='font-size:11.0pt;font-family:
"Calibri","sans-serif"'>[3]</span></span></span></a>  If in the &lt;dir_of_main_task&gt;
= </span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>dirname(tdm$mainFile)
</span><span lang=EN-US>an additional file <b>userMapDesign.csv</b> exists, it
is additionally read and added to the relevant data frame. The file userMapDesign.csv
makes the mapping modifiable and extendable by the user without the necessity
to modify the corresponding source file tdmMapDesign.r.</span></p>

<p class=MsoNormal><span lang=EN-US>These files are read in when starting
tdmCompleteEval via function tdmMapDesLoad and the corresponding data frames are
added to </span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>envT$map</span><span
lang=EN-US> and </span><span lang=EN-US style='font-size:10.0pt;font-family:
"Courier New"'>envT$mapUser</span><span lang=EN-US>, resp. This is for later
use by function tdmMapDesApply; this function can called from the parallel
slaves, which might have no access to a file system.</span></p>

<h3><a name="_Toc319565619"><span lang=EN-US>How to add a new tuning variable</span></a></h3>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>add a new line to userMapDesign.csv [user] or to
tdmMapDesign.csv [developer]</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>(optional, for developer) add a line to
tdmOptsDefaultsSet(), if it is a new variable opts$... and if all existing and
further tasks should have a default setting for this variable</span></p>

<h3><a name="_Toc319565620"><span lang=EN-US>Details</span></a></h3>

<p class=MsoListParagraph style='text-indent:-18.0pt'><span lang=EN-US
style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>We have in </span><a
href="../../../../../../../../../../../Dokumente%20und%20Einstellungen/wolfgang/Anwendungsdaten/Microsoft/tdm/phase2/tdmMapDesign.r"><span
lang=EN-US style='font-size:10.0pt'>tdmMapDesign.r</span></a><span lang=EN-US
style='font-size:10.0pt'> beneath {tdmMapDesLoad, tdmMapDesApply} a second pair
of functions {tdmMapDesSpot$load, tdmMapDesSpot$apply} with exactly the same
functionality. Why?  The second pair of functions is for use in
tdmStartSpot(spotConfig) where we have no access to envT due to the calling
syntax of spot(). Instead the object tdmMapDesSpot store the maps in local,
permanent storage of this objects environment. - The first pair of functions
{tdmMapDesLoad, tdmMapDesApply} is for use in tdmStartOther, especially when
called by a <i>separate</i> R process when using the tuner cma_j.  In this case
the local, permanent storage mechanism does not work across different R
sessions. Here we need the envT-based solution of the first pair, since the
environment envT can be restored across R sessions easily via save &amp; load.</span></p>

<h2><a name="_Toc319565621"></a><a name="_TDMR_parallel_computing"></a><span
lang=EN-US>TDMR </span><span lang=EN-US style='font-family:"Courier New"'>seed</span><span
lang=EN-US> Concept</span></h2>

<p class=MsoNormal><span lang=EN-US>In a TDMR task there are usually several
places where non-deterministic decisions are made and therefore certain
questions of reproducability / random variability arise: </span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US>1)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Design point selection of the tuner, </span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US>2)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Test/training-set division and </span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US>3)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>Model training (depending on the model, RF and neural nets are
usually non-determininstic, but SVM is deterministic).</span></p>

<p class=MsoNormal><span lang=EN-US>Part 1) is in the case of SPOT tuning
controlled by the variable spot.seed in the .conf file. You may set
spot.seed={any fixed number} for selecting exactly the same design points in
each run. (The design point selection is however dependent on the DM process:
If this process is non-deterministic (i.e. returns different y-values on the
same initial design points, you will usually get different design points from
sequential step 2 on.) Or you set spot.seed=</span><a href="#tdmRandomSeed"><span
lang=EN-US>tdmRandomSeed</span></a><span lang=EN-US>() and get in each tuning
run different design points (even if you repeat the same tuning experiment and
even for a deterministic DM process).</span></p>

<p class=MsoNormal><span lang=EN-US>In the case of CMA-ES or other tuning
algorithms, we use </span><span lang=EN-US style='font-size:10.0pt;font-family:
"Courier New"'>set.seed(spotConfig$spot.seed)</span><span lang=EN-US> right
before we randomly select the initial design point and ensure in this way
reproducibility. </span></p>

<p class=MsoNormal><span lang=EN-US>Part 2) and 3) belong to the DM process and
the TDMR software supports here three different cases of reproducability:</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US>a)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Sometimes you want two TDMR runs to behave
exactly the same (e.g. to see if a certain software change leaves the outcome
unchanged). Then you may set opts$TST.SEED={any fixed number} and
opts$MOD.SEED={any fixed number}.</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US>b)<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>Sometimes you want the test set selection (RSUB
or CV) to be deterministic, but the model training process non-deterministic.
This is the case if you want to formulate problem tasks of exactly the same
difficulty and to see how different models  or the same model in different
runs  perform on these tasks. Then you may set opts$TST.SEED={any fixed
number}, opts$MOD.SEED=NULL.</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US>c)<span
style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; </span></span><span
lang=EN-US>Sometimes you want both parts, test set selection and model
training, to be non-deterministic. This is if you want to see the full
variability of a certain solution approach, i.e. if you want to measure the
degree of reproducability in a whole experiment. Then you may set
opts$TST.SEED= NULL;  opts$MOD.SEED=NULL.</span></p>

<p class=MsoNormal><span lang=EN-US>(The case {TST.SEED= NULL; MOD.SEED=any
value} is a fourth possibility, but it has  as far as I can see  no practical
application). </span></p>

<p class=MsoNormal><span lang=EN-US>When opts$*.SEED  is NULL, then TDMR will
call opts$*.SEED=</span><a href="#tdmRandomSeed"><span lang=EN-US>tdmRandomSeed</span></a><span
lang=EN-US>() in tdmClassify before each usage of opts$*.SEED.  (* = MOD, TST)</span></p>

<p class=MsoNormal><span lang=EN-US>Here <b>tdmRan<a name=tdmRandomSeed></a>domSeed</b>
is a function which returns a different integer seed <u>each</u> time it is
called. This is even true, if it is called multiple times within the same
second (where a function like Sys.time() would return the same number). This
can easily happen in parallel execution mode, where processes on different
slaves usually will be started in the same second.</span></p>

<p class=MsoNormal><span lang=EN-US>A second aspect of random variability:  We
usually want each run through main_TASK (loop over </span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New"'>i in 1:opts$NRUN</span><span
lang=EN-US> in tdmClassifyLoop) <u>and</u> each repeat during tuning (loop over
</span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>r in
1:des$REPEATS[k]</span><span lang=EN-US> in tdmStart*) to explore different
random regions, even in the case where all seed settings (spot.seed,
opts$TST.SEED an opts$MOD.SEED) are fixed. We achieve this by storing the loop
variables </span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>i</span><span
lang=EN-US> and </span><span lang=EN-US style='font-size:10.0pt;font-family:
"Courier New"'>r</span><span lang=EN-US> in </span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New"'>opts$i</span><span
lang=EN-US> and </span><span lang=EN-US style='font-size:10.0pt;font-family:
"Courier New"'>opts$rep</span><span lang=EN-US>, resp., and use in
tdmClassify.r the specific seeds</span></p>

<p class=MsoNormal><span lang=EN-US>                </span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New"'>newseed=opts$MOD.SEED+(opts$i-1)+opts$NRUN*(opts$rep-1);<br>
</span><span lang=EN-US>and</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>      newseed=opts$TST.SEED+(opts$i-1)+opts$NRUN*(opts$rep-1);</span></p>

<p class=MsoNormal><span lang=EN-US>In this way, each run through main_TASK
gets a different seed. If opts$*.SEED is {any fixed number}, the whole process
is however exactly reproducible. </span></p>

<p class=MsoNormal><span style='position:absolute;z-index:251667456;margin-left:
6px;margin-top:28px;width:299px;height:111px'><img width=299 height=111
src="TDM-docu-Dateien/image005.png"
alt="main_TASK&#13;&#10;	for (opts$i = 1 : opts$NRUN)&#13;&#10;"></span><span
style='position:absolute;z-index:251668480;margin-left:61px;margin-top:78px;
width:235px;height:52px'><img width=235 height=52
src="TDM-docu-Dateien/image006.png" alt=tdmClassifyLoop></span><img border=0
width=310 height=145 src="TDM-docu-Dateien/image007.png"
alt="for (opts$rep = 1 : des$REPEATS[k])"></p>

<p class=MsoNormal><span lang=EN-US>Why is </span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New"'>opts$MOD.SEED=tdmRandomSeed()</span><span
lang=EN-US> and </span><span lang=EN-US style='font-size:10.0pt;font-family:
"Courier New"'>opts$MOD.SEED=NULL</span><span lang=EN-US>  different?  The
first statement selects a random seed at the time of definition time of </span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts$MOD.SEED</span><span
lang=EN-US>, but uses it then throughout the whole tuning process, i.e. each
design point evaluation within this tuning has the same </span><span
lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>opts$MOD.SEED</span><span
lang=EN-US>. The second statement, </span><span lang=EN-US style='font-size:
10.0pt;font-family:"Courier New"'>opts$MOD.SEED=NULL</span><span lang=EN-US>,
is different: Each time we pass through tdmClassify (start of
response.variable-loop) we execute the statement</span></p>

<p class=MsoNormal><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>      set.seed(tdmRandomSeed())</span></p>

<p class=MsoNormal><span lang=EN-US>which selects a new random seed for each
design point and each run.</span></p>

<p class=MsoNormal><u><span lang=EN-US>New Ja<a name="algSeed_remark"></a>n2012</span></u><span
lang=EN-US>: When </span><span lang=EN-US style='font-size:10.0pt;font-family:
"Courier New"'>opts$*.SEED</span><span lang=EN-US>  (* = MOD, TST) is the
string </span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>algSeed</span><span
lang=EN-US>, then TDMR will set the relevant seed to  </span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New"'>opts$ALG.SEED</span><span
lang=EN-US>, which is the seed </span><span lang=EN-US style='font-size:10.0pt;
font-family:"Courier New"'>spotConfig$alg.seed+r</span><span lang=EN-US> from
SPOT, where </span><span lang=EN-US style='font-size:10.0pt;font-family:"Courier New"'>spotConfig$alg.seed</span><span
lang=EN-US> is set by the user (reproducibility) and </span><span lang=EN-US
style='font-size:10.0pt;font-family:"Courier New"'>r</span><span lang=EN-US> is
the repeat-number for the design point in question (ensure that each repeat
gets another seed to explore the random variability). </span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h3><a name="_Toc319565622"><span lang=EN-US>Details</span></a><span
lang=EN-US>  </span></h3>

<p class=MsoNormal><span lang=EN-US style='font-size:10.0pt'>(RNG = random
number generator)</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>If TST.SEED</span><span
lang=EN-US>=</span><span lang=EN-US style='font-size:10.0pt'>NULL, the RNG seed
will be set to (a different) number via </span><a href="#tdmRandomSeed"><span
lang=EN-US style='font-size:10.0pt'>tdmRandomSeed()</span></a><span lang=EN-US>
</span><span lang=EN-US style='font-size:10.0pt'>in each pass through the
nrun-loop of tdmClassifyLoop / tdmRegressLoop (at start of loop).</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>If MOD.SEED</span><span
lang=EN-US>=</span><span lang=EN-US style='font-size:10.0pt'> NULL, the RNG
seed will be set to (a different) number via </span><a href="#tdmRandomSeed"><span
lang=EN-US style='font-size:10.0pt'>tdmRandomSeed()</span></a><span lang=EN-US>
</span><span lang=EN-US style='font-size:10.0pt'>in each pass through the
response.variable-loop of tdmClassify / tdmRegress (at start of step 4.3 model
training).</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-size:10.0pt;font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US style='font-size:10.0pt'>Before Nov2010 the
TDMR software would not modify RNG seed in any way if TST.SEED</span><span
lang=EN-US>=</span><span lang=EN-US style='font-size:10.0pt'>NULL. But we
noticed that with a call from SPOT two runs would exactly produce the same
results in this case. The reason is that SPOT fixes the RNG seed for each
configuration in the same way and so we got the same model training and test
set results. To change this, we moved to the new behaviour, where each *.SEED</span><span
lang=EN-US>=</span><span lang=EN-US style='font-size:10.0pt'>NULL leads to a
random RNG-seed at appropriate places.</span></p>

<h2><a name="_Toc319565623"><span lang=EN-US>TDMR Graphic Device Concept</span></a></h2>

<h4><span lang=EN-US>Utility Functions tdmGraphic*</span></h4>

<p class=MsoNormal><span lang=EN-US>These functions are defined in tdmGraphicUtils.r
and should provide a consistent interface to different graphics device choices.
</span></p>

<p class=MsoNormal><span lang=EN-US>The different choices for opts$GRAPHDEV are
</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>pdf: plot everything in one multipage pdf file
opts$GRAPHFILE</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>png: each plot goes into a new png file in
opts$GD.PNGDIR</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>win: each plot goes into a new window (X11())</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>non: all plots are suppressed (former
opts$DO.GRAPHICS=F)</span></p>

<table class=MsoTableGrid border=1 cellspacing=0 cellpadding=0
 style='border-collapse:collapse;border:none'>
 <tr>
  <td width=141 valign=top style='width:105.9pt;border:solid windowtext 1.0pt;
  background:#FFFFCC;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><b><span lang=EN-US>&nbsp;</span></b></p>
  </td>
  <td width=461 colspan=4 valign=top style='width:346.05pt;border:solid windowtext 1.0pt;
  border-left:none;background:#FFFFCC;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal align=center style='text-align:center'><b><span
  lang=EN-US>opts$GRAPHDEV</span></b></p>
  </td>
 </tr>
 <tr>
  <td width=141 valign=top style='width:105.9pt;border:solid windowtext 1.0pt;
  border-top:none;background:#FFFFCC;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><b><span lang=EN-US>utility function</span></b></p>
  </td>
  <td width=120 valign=top style='width:89.7pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  background:#FFFFCC;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><b><span lang=EN-US>pdf</span></b></p>
  </td>
  <td width=119 valign=top style='width:89.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  background:#FFFFCC;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><b><span lang=EN-US>png</span></b></p>
  </td>
  <td width=122 valign=top style='width:91.15pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  background:#FFFFCC;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><b><span lang=EN-US>win</span></b></p>
  </td>
  <td width=101 valign=top style='width:76.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  background:#FFFFCC;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><b><span lang=EN-US>non</span></b></p>
  </td>
 </tr>
 <tr>
  <td width=141 valign=top style='width:105.9pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>tdmGraphicInit</span></p>
  </td>
  <td width=120 valign=top style='width:89.7pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>open multipage pdf</span></p>
  </td>
  <td width=119 valign=top style='width:89.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>(create and) clear PNGDIR</span></p>
  </td>
  <td width=122 valign=top style='width:91.15pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>-</span></p>
  </td>
  <td width=101 valign=top style='width:76.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>-</span></p>
  </td>
 </tr>
 <tr>
  <td width=141 valign=top style='width:105.9pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>tdmGraphicNewWin</span></p>
  </td>
  <td width=120 valign=top style='width:89.7pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>-</span></p>
  </td>
  <td width=119 valign=top style='width:89.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>open new png file in PNGDIR</span></p>
  </td>
  <td width=122 valign=top style='width:91.15pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>open new window</span></p>
  </td>
  <td width=101 valign=top style='width:76.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>-</span></p>
  </td>
 </tr>
 <tr>
  <td width=141 valign=top style='width:105.9pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>tdmGraphicCloseWin</span></p>
  </td>
  <td width=120 valign=top style='width:89.7pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>-</span></p>
  </td>
  <td width=119 valign=top style='width:89.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>close png file</span></p>
  </td>
  <td width=122 valign=top style='width:91.15pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>-</span></p>
  </td>
  <td width=101 valign=top style='width:76.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>-</span></p>
  </td>
 </tr>
 <tr>
  <td width=141 valign=top style='width:105.9pt;border:solid windowtext 1.0pt;
  border-top:none;padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>tdmGraphicCloseDev</span></p>
  </td>
  <td width=120 valign=top style='width:89.7pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>close all open pdf devices</span></p>
  </td>
  <td width=119 valign=top style='width:89.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>close all open png devices</span></p>
  </td>
  <td width=122 valign=top style='width:91.15pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>close all devices (graphics.off())</span></p>
  </td>
  <td width=101 valign=top style='width:76.1pt;border-top:none;border-left:
  none;border-bottom:solid windowtext 1.0pt;border-right:solid windowtext 1.0pt;
  padding:0cm 5.4pt 0cm 5.4pt'>
  <p class=MsoNormal><span lang=EN-US>-</span></p>
  </td>
 </tr>
</table>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>tdmGraphicCloseWin does not close any
X11()-window (because we want to look at it), but it closes the last open .png
file with dev.off(), so that you can look at this .png file with an image
viewer.</span></p>

<h4><span lang=EN-US>GD.RESTART, Case 1: main_TASK solo</span></h4>

<p class=MsoNormal><span lang=EN-US>if GD.RESTART==F: No window is closed, no
graphic device restarted. </span></p>

<p class=MsoNormal><span lang=EN-US>If GD.RESTART==T we want the following
behaviour:</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>close initially any windows from previous runs </span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>not too many windows open (e.g. if NRUN=5,
nfold=10, the repeated generation of windows can easily lead to s.th. like 250
open windows)</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>the important windows should be open long enough
to view them (at least shortly)</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>in the end, the last round of windows should
remain open. </span></p>

<p class=MsoNormal><span lang=EN-US>We achieve this behaviour with the
following actions in the code for the case GD.RESTART==T:</span></p>

<p class=MsoListParagraphCxSpFirst style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>close all open windows when starting main_TASK</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>close all open windows before starting the last
loop (i==NRUN, k=the.nfold) of tdmClassify</span></p>

<p class=MsoListParagraphCxSpMiddle style='text-indent:-18.0pt'><span
lang=EN-US style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>close all open windows when starting the
graphics part (Part 4.7) of tdmClassify <i><u>UNLESS</u></i> we are in the last
loop (i==NRUN, k=the.nfold); this assures that the windows remain open before
the graphics part, that is during the time consuming training part.</span></p>

<p class=MsoListParagraphCxSpLast style='text-indent:-18.0pt'><span lang=EN-US
style='font-family:Symbol'>·<span style='font:7.0pt "Times New Roman"'>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</span></span><span lang=EN-US>if GD.CLOSE==T and GD.GRAPHDEV!=win: close in
the end any open .png or .pdf</span></p>

<h4><span lang=EN-US>GD.RESTART, Case 2: During SPOT-Run auto</span></h4>

<p class=MsoNormal><span lang=EN-US>This will normally have GD.RESTART=F: No window
is closed, no graphic device restarted; but also GD.GRAPHDEV=non, so that no
graphic is issued from main_TASK, only the graphics from SPOT.</span></p>

<h4><span lang=EN-US>GD.RESTART, Case 3: During unbiased runs</span></h4>

<p class=MsoNormal><span lang=EN-US>This will normally have also GD.RESTART=F
and GD.GRAPHDEV=non: No graphics. But you might as well set GD.RESTART=T and
choose any of the active GD.GRAPHDEVs before calling unbiaseBestRun_*, if you
want the plots from the last round of unbiasedBestRun_*.</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<p class=MsoNormal><span lang=EN-US>&nbsp;</span></p>

<h2><a name="_Toc319565624"><span lang=EN-US>Summary</span></a></h2>

<p class=MsoNormal><span lang=EN-US>This report has shown how to use TDMR, the <b>T</b>uned
<b>D</b>ata <b>M</b>ining framework in <b>R</b>. The examples shown should make
the reader familiar with the concepts and the workflow phases of TDMR. They are
deliberately made with fairly small datasets in order to facilitate quick
reproducability. For results on larger datasets the reader is referred to
[Kone10a, Kone11b].  </span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:-21.3pt;margin-bottom:
0cm;margin-left:0cm;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:-21.3pt;margin-bottom:
0cm;margin-left:0cm;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:-21.3pt;margin-bottom:
0cm;margin-left:0cm;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>

<h2><a name="_Toc319565625">References</a></h2>

<p class=MsoNormal><span class=citation>[Bart10e] T. Bartz-Beielstein. </span><span
class=citation><span lang=EN-US>SPOT: An R package for automatic and
interactive tuning of optimization algorithms by sequential parameter
optimization. Technical Report </span></span><a
href="http://arxiv.org/abs/1006.4645"><span lang=EN-US>http://arxiv.org/abs/1006.4645</span></a><span
class=citation><span lang=EN-US> . CIOP Technical Report 05-10, FH Köln, June
2010.  </span></span></p>

<p class=MsoNormal><span class=citation><span lang=EN-US>[Hans06] N. Hansen.
The CMA evolution strategy: a comparing review. In: J. Lozano, P. Larranaga, I.
Inza, and E. Bengoetxea, editors, Towards a new evolutionary computation.
Advances on estimation of distribution algorithms, pages 75-102. Springer,
2006. </span></span></p>

<p class=MsoNormal><span class=citation><span lang=EN-US>[Kone10a] W. Konen, P.
Koch, O. Flasch, T. Bartz-Beielstein. </span></span><a
href="http://www.gm.fh-koeln.de/~konen/Publikationen/GMACI10_tunedDM.pdf"><span
lang=EN-US>Parameter-tuned data mining: A general framework</span></a><span
class=citation><span lang=EN-US>. In F. Hoffmann and E. Hüllermeier, editors,
Proceedings 20. Workshop Computational Intelligence. </span>Universitätsverlag
Karlsruhe, 2010. </span></p>

<p class=MsoNormal><span class=citation>[Kone11b] W. Konen, P. Koch, O. Flasch,
T. Bartz-Beielstein. </span><a
href="http://maanvs03.gm.fh-koeln.de/webpub/CIOPReports.d/Kone11b.d/tdm-cioprep.pdf"><span
lang=EN-US>Tuned Data Mining: A Benchmark Study on Different Tuners</span></a><span
lang=EN-US>, Proc. </span>GECCO 2011, Dublin, July 2011<span class=citation><span
lang=EN-US>.  </span></span></p>

<p class=MsoNormal><span class=citation>[Knaus08] Jochen Knaus, </span>Parallel
computing in R with sfCluster/snowfall, TR IMBI Uni Freiburg, <a
href="http://www.imbi.uni-freiburg.de/parallel/">http://www.imbi.uni-freiburg.de/parallel/</a><span
class=citation>.</span></p>

<p class=MsoNormal><span class=citation>[Knaus09] Knaus, J. and Porzelius, C.
and Binder, H. and Schwarzer, G., Easier parallel computing in R with snowfall
and sfCluster. </span><span class=citation><span lang=EN-US>The R Journal,
1:5459, 2009.</span></span></p>

<p class=MsoNormal><span class=citation><span lang=EN-US>[McKay79] McKay, M.D.;
Beckman, R.J.; Conover, W.J. (May 1979). </span></span><a
href="http://www.jstor.org/pss/1268522"><span lang=EN-US>&quot;A Comparison of
Three Methods for Selecting Values of Input Variables in the Analysis of Output
from a Computer Code&quot;</span></a><span class=citation><span lang=EN-US> (</span></span><a
href="http://en.wikipedia.org/wiki/JSTOR" title=JSTOR><span lang=EN-US>JSTOR</span></a><span
class=citation><span lang=EN-US> Abstract). </span></span><a
href="http://en.wikipedia.org/wiki/Technometrics" title=Technometrics><i><span
lang=EN-US>Technometrics</span></i></a><span class=citation><span lang=EN-US> (</span></span><a
href="http://en.wikipedia.org/wiki/American_Statistical_Association"
title="American Statistical Association"><span lang=EN-US>American Statistical
Association</span></a><span class=citation><span lang=EN-US>) <b>21</b> (2):
239245. </span></span><a
href="http://en.wikipedia.org/wiki/Digital_object_identifier"
title="Digital object identifier"><span lang=EN-US>doi</span></a><span
class=citation><span lang=EN-US>:</span></span><a
href="http://dx.doi.org/10.2307%2F1268522"><span lang=EN-US>10.2307/1268522</span></a><span
class=citation><span lang=EN-US>. </span></span><a
href="http://en.wikipedia.org/wiki/Office_of_Scientific_and_Technical_Information"
title="Office of Scientific and Technical Information"><span lang=EN-US>OSTI</span></a><span
class=citation><span lang=EN-US> </span></span><a
href="http://www.osti.gov/energycitations/product.biblio.jsp?osti_id=5236110"><span
lang=EN-US>5236110</span></a><span class=citation><span lang=EN-US>. </span></span><a
href="http://en.wikipedia.org/wiki/International_Standard_Serial_Number"
title="International Standard Serial Number"><span lang=EN-US>ISSN</span></a><span
class=citation><span lang=EN-US>&nbsp;</span></span><a
href="http://www.worldcat.org/issn/0040-1706"><span lang=EN-US>0040-1706</span></a><span
class=printonly><span lang=EN-US>. </span></span><a
href="http://www.jstor.org/pss/1268522"><span lang=EN-US>http://www.jstor.org/pss/1268522</span></a><span
class=reference-accessdate><span lang=EN-US>.</span></span></p>

<p class=MsoNormal style='margin-top:0cm;margin-right:-21.3pt;margin-bottom:
0cm;margin-left:0cm;margin-bottom:.0001pt'><span lang=EN-US style='font-size:
10.0pt;font-family:"Arial Narrow","sans-serif"'>&nbsp;</span></p>

<p class=MsoNormal style='margin-bottom:10.0pt;line-height:115%'><b><span
lang=EN-US style='font-size:13.0pt;line-height:115%;font-family:"Cambria","serif";
color:#4F81BD'>&nbsp;</span></b></p>

</div>

<div><br clear=all>

<hr align=left size=1 width="33%">

<div id=ftn1>

<p class=MsoFootnoteText><a href="#_ftnref1" name="_ftn1" title=""><span
class=MsoFootnoteReference><span class=MsoFootnoteReference><span
style='font-size:10.0pt;font-family:"Calibri","sans-serif"'>[1]</span></span></span></a>
<span lang=EN-US> This is not the recommended way, but sometimes you have no
other data than the training data and you want at least to assess, whether the
model build on another random sample reaches the same performance</span></p>

</div>

<div id=ftn2>

<p class=MsoFootnoteText><a href="#_ftnref2" name="_ftn2" title=""><span
class=MsoFootnoteReference><span class=MsoFootnoteReference><span
style='font-size:10.0pt;font-family:"Calibri","sans-serif"'>[2]</span></span></span></a>
<span lang=EN-US>Template available from inst/demo02sonar.</span></p>

</div>

<div id=ftn3>

<p class=MsoFootnoteText><a href="#_ftnref3" name="_ftn3" title=""><span
class=MsoFootnoteReference><span class=MsoFootnoteReference><span
style='font-size:10.0pt;font-family:"Calibri","sans-serif"'>[3]</span></span></span></a><span
lang=EN-US> resp. from tdm$tdmPath/inst/ for the developer version.</span></p>

</div>

</div>

</body>

</html>
